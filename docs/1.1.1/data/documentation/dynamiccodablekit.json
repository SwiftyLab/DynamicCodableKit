{"schemaVersion":{"major":0,"patch":0,"minor":2},"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"paragraph"},{"anchor":"Requirements","level":2,"type":"heading","text":"Requirements"},{"header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Platform"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"text":"Status","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Linux"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Windows","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not Tested but Supported"}]}]]],"type":"table"},{"anchor":"Installation","level":2,"type":"heading","text":"Installation"},{"anchor":"CocoaPods","level":3,"type":"heading","text":"CocoaPods"},{"inlineContent":[{"identifier":"https:\/\/cocoapods.org","type":"reference","isActive":true},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["pod 'DynamicCodableKit'"],"syntax":"ruby"},{"inlineContent":[{"text":"Optionally, you can also use the pre built XCFramework from the GitHub releases page by replacing ","type":"text"},{"type":"codeVoice","code":"{version}"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby"},{"anchor":"Carthage","level":3,"type":"heading","text":"Carthage"},{"inlineContent":[{"identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true,"type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl"},{"anchor":"Swift-Package-Manager","level":3,"type":"heading","text":"Swift Package Manager"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre built XCFramework from the GitHub releases page by replacing "},{"code":"{version}","type":"codeVoice"},{"type":"text","text":" and "},{"code":"{checksum}","type":"codeVoice"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"type":"codeListing","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift"},{"anchor":"Manually","level":3,"type":"heading","text":"Manually"},{"inlineContent":[{"text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" into your project manually.","type":"text"}],"type":"paragraph"},{"anchor":"Git-Submodule","level":4,"type":"heading","text":"Git Submodule"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open up Terminal, "},{"code":"cd","type":"codeVoice"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}]},{"type":"codeListing","code":["$ git init"],"syntax":"bash"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a git "},{"type":"reference","isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},{"type":"text","text":" by running the following command:"}],"type":"paragraph"},{"code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"type":"codeListing","syntax":"bash"}]},{"content":[{"inlineContent":[{"type":"text","text":"Open the new "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" folder, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" into the Project Navigator of your application’s Xcode project or existing workspace."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter."}],"type":"paragraph"}],"style":"note","type":"aside"}]},{"content":[{"inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the ","type":"text"},{"type":"codeVoice","code":"Targets"},{"text":" heading in the sidebar.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the tab bar at the top of that window, open the “General” panel."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" button under the "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will see "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" folder with "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" nested inside."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device.","type":"text"}]}],"style":"note","type":"aside"}]}],"type":"unorderedList"},{"anchor":"XCFramework","level":4,"type":"heading","text":"XCFramework"},{"inlineContent":[{"text":"You can also directly download the pre-built artifact from the GitHub releases page:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Download the artifact from the GitHub releases page of the format ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit-{version}.xcframework.zip"},{"text":" where ","type":"text"},{"type":"codeVoice","code":"{version}"},{"text":" is the version you want to use.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Extract the XCFramework from the archive, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" into the Project Navigator of your application’s target folder in your Xcode project."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select "},{"type":"codeVoice","code":"Copy items if needed"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" is automagically added in the embedded "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section, an in turn the linked framework in build phase."}]}],"style":"note","type":"aside"}]}],"type":"unorderedList"}]}],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"roleHeading":"Framework","role":"collection","modules":[{"name":"DynamicCodableKit"}],"title":"DynamicCodableKit","externalID":"DynamicCodableKit","symbolKind":"module"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DynamicDecodingContext","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","title":"DynamicDecodingDefaultValueProvider","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"title":"DynamicDecodable","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DynamicDecodable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"role":"collection","type":"topic","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic encoding.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","title":"DynamicEncodable","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"title":"SequenceInitializable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"role":"collectionGroup","type":"topic","abstract":[{"text":"Customize collection decoding failure handling with ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecoding","title":"Configure Collection Type Decoding","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding"},"https://cocoapods.org":{"titleInlineContent":[{"type":"text","text":"CocoaPods"}],"type":"link","title":"CocoaPods","url":"https:\/\/cocoapods.org","identifier":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"type":"topic","title":"DynamicCodable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}]},"https://swift.org/package-manager/":{"titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"link","title":"Swift Package Manager","url":"https:\/\/swift.org\/package-manager\/","identifier":"https:\/\/swift.org\/package-manager\/"},"https://git-scm.com/docs/git-submodule":{"titleInlineContent":[{"type":"text","text":"submodule"}],"type":"link","title":"submodule","url":"https:\/\/git-scm.com\/docs\/git-submodule","identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"role":"collectionGroup","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"type":"topic","abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","title":"CollectionDecodeFailConfiguration","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}]},"https://github.com/Carthage/Carthage":{"titleInlineContent":[{"type":"text","text":"Carthage"}],"type":"link","title":"Carthage","url":"https:\/\/github.com\/Carthage\/Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","type":"topic","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","title":"Using Default Value if Decoding Fails","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","required":true,"kind":"symbol","title":"castAs(type:codingPath:)","abstract":[{"text":"Cast self as generic  type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":".","type":"text"}],"defaultImplementations":4,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"url":"\/documentation\/dynamiccodablekit\/contextprovider","kind":"article","type":"topic","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","title":"Decoding with Provided Context","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"title":"Decoding with Type Identifiers","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","kind":"article","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier","abstract":[{"text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode.","type":"text"}]}}}