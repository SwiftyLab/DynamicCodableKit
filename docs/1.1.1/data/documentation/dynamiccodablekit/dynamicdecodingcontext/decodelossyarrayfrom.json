{"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeLossyArrayFrom"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"]"}],"title":"decodeLossyArrayFrom","externalID":"s:17DynamicCodableKit0A15DecodingContextV20decodeLossyArrayFromySayxGs7Decoder_pcvp","symbolKind":"property","modules":[{"name":"DynamicCodableKit"}],"role":"symbol","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]]},"abstract":[{"text":"Decode valid data into ","type":"text"},{"type":"codeVoice","code":"Array<Base>"},{"type":"text","text":" type from "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"while ignoring invalid data."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeLossyArrayFrom","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The decoded "},{"code":"Array<Base>","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":" to decode from.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"code":["let value: Array<Base> = context.decodeLossyArrayFrom(decoder)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":2},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/decodeLossyArrayFrom"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/decodelossyarrayfrom"]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DynamicDecodingContext","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext/decodeLossyArrayFrom":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeLossyArrayFrom"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"]"}],"role":"symbol","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/decodelossyarrayfrom","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/decodeLossyArrayFrom","title":"decodeLossyArrayFrom","abstract":[{"text":"Decode valid data into ","type":"text"},{"type":"codeVoice","code":"Array<Base>"},{"text":" type from ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"while ignoring invalid data.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"role":"collection","type":"topic","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"}}}