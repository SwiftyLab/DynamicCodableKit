{"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"DynamicCodableKit"}],"role":"symbol","externalID":"s:17DynamicCodableKit0A28DecodingDefaultValueProviderPyx7WrappedQzcfc","symbolKind":"init","title":"init(_:)","required":true,"roleHeading":"Initializer"},"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The value to wrap\/store.","type":"text"}],"type":"paragraph"}],"name":"wrapped"}],"kind":"parameters"}],"kind":"symbol","abstract":[{"type":"text","text":"Creates an instance that stores the given value."}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/init(_:)"},"variants":[{"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","title":"DynamicCodableKit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","role":"collection","type":"topic","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"url":"\/documentation\/dynamiccodablekit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider/init(_:)":{"title":"init(_:)","type":"topic","required":true,"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/init(_:)","abstract":[{"text":"Creates an instance that stores the given value.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","title":"Using Default Value if Decoding Fails","type":"topic","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"text":".","type":"text"}],"kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"title":"DynamicDecodingDefaultValueProvider","type":"topic","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"kind":"symbol"}}}