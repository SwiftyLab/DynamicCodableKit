{"schemaVersion":{"minor":2,"patch":0,"major":0},"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey"},{"text":".","type":"text"}],"seeAlsoSections":[{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ContextCodingKey"},{"kind":"text","text":"> = "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","kind":"typeIdentifier","text":"DynamicDecodingDefaultValueWrapper","preciseIdentifier":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ContextCodingKey"},{"text":", ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Identified","kind":"typeIdentifier"},{"text":">> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"DynamicDecodingContextCodingKey","preciseIdentifier":"s:17DynamicCodableKit0A24DecodingContextCodingKeyP","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"code":"OptionalDynamicDecodingWrapper","type":"codeVoice"},{"text":" is a type alias for","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","type":"reference","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"with wrapped value as optional dynamic value. If decoding fails,","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is used as underlying value instead of throwing error.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper"},"sections":[],"metadata":{"modules":[{"name":"DynamicCodableKit"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"navigatorTitle":[{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"roleHeading":"Type Alias","title":"OptionalDynamicDecodingWrapper","externalID":"s:17DynamicCodableKit08OptionalA15DecodingWrappera","role":"symbol","symbolKind":"typealias"},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper"]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"type":"topic","title":"DynamicDecodingDefaultValueWrapper","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueWrapper"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueWrapper"}],"abstract":[{"type":"text","text":"A property wrapper type that decodes dynamic value in a no throw approach based on"},{"type":"text","text":" "},{"type":"text","text":"dynamic decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"role":"collectionGroup","type":"topic","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}],"kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","type":"topic","kind":"article","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","role":"symbol","kind":"symbol","abstract":[{"text":"A coding key type that decides dynamic decoding context based on its associated ","type":"text"},{"code":"KeyedDecodingContainer","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"DynamicDecodingContextCodingKey","navigatorTitle":[{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextProvider":{"title":"DynamicDecodingContextProvider","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextProvider"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that decides dynamic decoding context based on provided "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"url":"\/documentation\/dynamiccodablekit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"role":"collection","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingWrapper":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper","role":"symbol","title":"OptionalDynamicDecodingWrapper","abstract":[{"type":"text","text":"A property wrapper type that decodes optional dynamic value based on dynamic"},{"type":"text","text":" "},{"type":"text","text":"decoding context provided by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey"},{"type":"text","text":"."}],"url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingContextBasedWrapper":{"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"OptionalDynamicDecodingContextBasedWrapper"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingContextBasedWrapper"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper","url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingcontextbasedwrapper","title":"OptionalDynamicDecodingContextBasedWrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that exposes optional value of provided coding key type","type":"text"},{"text":" ","type":"text"},{"text":"from the path of coding keys taken to get to decoding this type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","type":"topic","role":"symbol","title":"OptionalPathCodingKeyWrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","title":"DynamicDecodingDefaultValueProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","type":"topic","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}]}}}