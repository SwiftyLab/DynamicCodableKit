{"metadata":{"symbolKind":"module","title":"DynamicCodableKit","role":"collection","externalID":"DynamicCodableKit","modules":[{"name":"DynamicCodableKit"}],"roleHeading":"Framework"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"schemaVersion":{"patch":0,"major":0,"minor":2},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"sections":[],"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","isActive":true},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","isActive":true},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Requirements","anchor":"Requirements"},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Status"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Linux"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Windows","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.3"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]]],"header":"row"},{"level":2,"type":"heading","text":"Installation","anchor":"Installation"},{"level":3,"type":"heading","text":"CocoaPods","anchor":"CocoaPods"},{"inlineContent":[{"identifier":"https:\/\/cocoapods.org","isActive":true,"type":"reference"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["pod 'DynamicCodableKit'"],"syntax":"ruby"},{"inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby"},{"level":3,"type":"heading","text":"Carthage","anchor":"Carthage"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage"},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"code":"Cartfile","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl"},{"level":3,"type":"heading","text":"Swift Package Manager","anchor":"Swift-Package-Manager"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/"},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" and "},{"type":"codeVoice","code":"{checksum}"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"type":"codeListing","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift"},{"level":3,"type":"heading","text":"Manually","anchor":"Manually"},{"inlineContent":[{"text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your project manually.","type":"text"}],"type":"paragraph"},{"level":4,"type":"heading","text":"Git Submodule","anchor":"Git-Submodule"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open up Terminal, "},{"type":"codeVoice","code":"cd"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}]},{"type":"codeListing","syntax":"bash","code":["$ git init"]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a git "},{"type":"reference","isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},{"type":"text","text":" by running the following command:"}],"type":"paragraph"},{"syntax":"bash","code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"type":"codeListing"}]},{"content":[{"inlineContent":[{"type":"text","text":"Open the new "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" folder, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" into the Project Navigator of your application’s Xcode project or existing workspace."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter."}]}],"type":"aside"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"type":"text","text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"type":"codeVoice","code":"Targets"},{"type":"text","text":" heading in the sidebar."}]}]},{"content":[{"inlineContent":[{"text":"In the tab bar at the top of that window, open the “General” panel.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on the "},{"code":"+","type":"codeVoice"},{"type":"text","text":" button under the "},{"code":"Frameworks and Libraries","type":"codeVoice"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You will see ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" folder with ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" nested inside.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" and that’s it!"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device."}],"type":"paragraph"}]}]}],"type":"unorderedList"},{"level":4,"type":"heading","text":"XCFramework","anchor":"XCFramework"},{"inlineContent":[{"text":"You can also directly download the pre-built artifact from the GitHub releases page:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"type":"codeVoice","code":"DynamicCodableKit-{version}.xcframework.zip"},{"type":"text","text":" where "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" is the version you want to use."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Extract the XCFramework from the archive, and drag the ","type":"text"},{"code":"DynamicCodableKit.xcframework","type":"codeVoice"},{"text":" into the Project Navigator of your application’s target folder in your Xcode project.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select "},{"type":"codeVoice","code":"Copy items if needed"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" is automagically added in the embedded "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section, an in turn the linked framework in build phase."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"title":"DynamicDecodable","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"type":"topic","kind":"symbol"},"https://git-scm.com/docs/git-submodule":{"type":"link","identifier":"https:\/\/git-scm.com\/docs\/git-submodule","title":"submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"url":"https:\/\/git-scm.com\/docs\/git-submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"type":"topic","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","role":"collectionGroup","title":"Decoding with Parent CodingKey","url":"\/documentation\/dynamiccodablekit\/containercodingkey","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}]},"https://swift.org/package-manager/":{"type":"link","identifier":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"url":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","url":"\/documentation\/dynamiccodablekit\/contextprovider","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"title":"Decoding with Provided Context","type":"topic","kind":"article","role":"collectionGroup"},"https://cocoapods.org":{"type":"link","identifier":"https:\/\/cocoapods.org","title":"CocoaPods","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"url":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"title":"DynamicEncodable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"url":"\/documentation\/dynamiccodablekit","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","kind":"symbol","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","kind":"article","type":"topic","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","role":"collectionGroup","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","title":"DynamicCodable","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"title":"SequenceInitializable","type":"topic","abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","title":"castAs(type:codingPath:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"required":true,"abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"defaultImplementations":4,"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"role":"symbol","title":"DynamicDecodingDefaultValueProvider","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}]},"https://github.com/Carthage/Carthage":{"titleInlineContent":[{"type":"text","text":"Carthage"}],"url":"https:\/\/github.com\/Carthage\/Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"link","title":"Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"title":"CollectionDecodeFailConfiguration","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","role":"symbol","abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"title":"Configure Collection Type Decoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","role":"collectionGroup","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"title":"Decoding with Type Identifiers","type":"topic","kind":"article","url":"\/documentation\/dynamiccodablekit\/typeidentifier","role":"collectionGroup","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"}}}