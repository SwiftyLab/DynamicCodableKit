{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"metadata":{"roleHeading":"Framework","symbolKind":"module","modules":[{"name":"DynamicCodableKit"}],"role":"collection","title":"DynamicCodableKit","externalID":"DynamicCodableKit"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","isActive":true},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","isActive":true},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"paragraph"},{"text":"Requirements","level":2,"type":"heading","anchor":"Requirements"},{"header":"row","rows":[[[{"inlineContent":[{"type":"text","text":"Platform"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Minimum Swift Version","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Installation"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Status"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"CocoaPods, Carthage, Swift Package Manager, Manual"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Linux"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Fully Tested","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Windows","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Not Tested but Supported"}],"type":"paragraph"}]]],"type":"table"},{"text":"Installation","level":2,"type":"heading","anchor":"Installation"},{"text":"CocoaPods","level":3,"type":"heading","anchor":"CocoaPods"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/cocoapods.org","type":"reference"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"type":"codeVoice","code":"Podfile"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit'"],"syntax":"ruby","type":"codeListing"},{"inlineContent":[{"text":"Optionally, you can also use the pre built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby","type":"codeListing"},{"text":"Carthage","level":3,"type":"heading","anchor":"Carthage"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/Carthage\/Carthage"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"type":"codeVoice","code":"Cartfile"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl","type":"codeListing"},{"text":"Swift Package Manager","level":3,"type":"heading","anchor":"Swift-Package-Manager"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference","isActive":true},{"text":" is a tool for automating the distribution of Swift code and is integrated into the ","type":"text"},{"code":"swift","type":"codeVoice"},{"text":" compiler.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Optionally, you can also use the pre built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"{checksum}","type":"codeVoice"},{"text":" with the required version and checksum of artifact you want to use:","type":"text"}],"type":"paragraph"},{"code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift","type":"codeListing"},{"text":"Manually","level":3,"type":"heading","anchor":"Manually"},{"inlineContent":[{"text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your project manually.","type":"text"}],"type":"paragraph"},{"text":"Git Submodule","level":4,"type":"heading","anchor":"Git-Submodule"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open up Terminal, "},{"code":"cd","type":"codeVoice"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}]},{"syntax":"bash","type":"codeListing","code":["$ git init"]}]},{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a git ","type":"text"},{"isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","type":"reference"},{"text":" by running the following command:","type":"text"}],"type":"paragraph"},{"code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"syntax":"bash","type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the new "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" folder, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" into the Project Navigator of your application’s Xcode project or existing workspace."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.","type":"text"}]}],"type":"aside","style":"note"}]},{"content":[{"inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the ","type":"text"},{"code":"Targets","type":"codeVoice"},{"text":" heading in the sidebar.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the tab bar at the top of that window, open the “General” panel.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Click on the ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" button under the ","type":"text"},{"type":"codeVoice","code":"Frameworks and Libraries"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"You will see ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" folder with ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" nested inside.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" and that’s it!","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"type":"text","text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"type":"unorderedList"},{"text":"XCFramework","level":4,"type":"heading","anchor":"XCFramework"},{"inlineContent":[{"type":"text","text":"You can also directly download the pre-built artifact from the GitHub releases page:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"code":"DynamicCodableKit-{version}.xcframework.zip","type":"codeVoice"},{"type":"text","text":" where "},{"code":"{version}","type":"codeVoice"},{"type":"text","text":" is the version you want to use."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Extract the XCFramework from the archive, and drag the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"text":" into the Project Navigator of your application’s target folder in your Xcode project.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select "},{"type":"codeVoice","code":"Copy items if needed"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"text":" is automagically added in the embedded ","type":"text"},{"type":"codeVoice","code":"Frameworks and Libraries"},{"text":" section, an in turn the linked framework in build phase.","type":"text"}],"type":"paragraph"}]}]}],"type":"unorderedList"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[[]]},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","title":"Using Default Value if Decoding Fails","kind":"article","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"type":"topic","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/contextprovider","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","title":"Decoding with Provided Context"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","url":"\/documentation\/dynamiccodablekit\/typeidentifier","kind":"article","title":"Decoding with Type Identifiers","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode."}],"role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","title":"Decoding with Parent CodingKey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"defaultImplementations":4,"title":"castAs(type:codingPath:)","kind":"symbol","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"required":true},"https://github.com/Carthage/Carthage":{"identifier":"https:\/\/github.com\/Carthage\/Carthage","url":"https:\/\/github.com\/Carthage\/Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"type":"link","title":"Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"title":"DynamicDecodingDefaultValueProvider","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"https://swift.org/package-manager/":{"identifier":"https:\/\/swift.org\/package-manager\/","url":"https:\/\/swift.org\/package-manager\/","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"link","title":"Swift Package Manager"},"https://git-scm.com/docs/git-submodule":{"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","url":"https:\/\/git-scm.com\/docs\/git-submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"type":"link","title":"submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContext"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"allowing dynamic decoding."}],"type":"topic","title":"DynamicDecodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","abstract":[{"text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding and encoding","type":"text"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"type":"topic","title":"DynamicCodable"},"https://cocoapods.org":{"identifier":"https:\/\/cocoapods.org","url":"https:\/\/cocoapods.org","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"type":"link","title":"CocoaPods"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"title":"SequenceInitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"title":"CollectionDecodeFailConfiguration","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"url":"\/documentation\/dynamiccodablekit\/collectiondecoding","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","title":"Configure Collection Type Decoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"title":"DynamicEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit","kind":"symbol","type":"topic","role":"collection"}}}