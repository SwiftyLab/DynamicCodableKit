{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"symbolKind":"module","role":"collection","externalID":"DynamicCodableKit","modules":[{"name":"DynamicCodableKit"}],"title":"DynamicCodableKit","roleHeading":"Framework"},"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"reference"},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference"},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"paragraph"},{"text":"Requirements","type":"heading","anchor":"Requirements","level":2},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimum Swift Version"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Status"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Linux"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not Tested but Supported"}]}]]]},{"text":"Installation","type":"heading","anchor":"Installation","level":2},{"text":"CocoaPods","type":"heading","anchor":"CocoaPods","level":3},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/cocoapods.org"},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit'"],"syntax":"ruby","type":"codeListing"},{"inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby","type":"codeListing"},{"text":"Carthage","type":"heading","anchor":"Carthage","level":3},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl","type":"codeListing"},{"text":"Swift Package Manager","type":"heading","anchor":"Swift-Package-Manager","level":3},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/"},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" and "},{"type":"codeVoice","code":"{checksum}"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift","type":"codeListing"},{"text":"Manually","type":"heading","anchor":"Manually","level":3},{"inlineContent":[{"type":"text","text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your project manually."}],"type":"paragraph"},{"text":"Git Submodule","type":"heading","anchor":"Git-Submodule","level":4},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Open up Terminal, ","type":"text"},{"code":"cd","type":"codeVoice"},{"text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:","type":"text"}]},{"code":["$ git init"],"type":"codeListing","syntax":"bash"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a git "},{"type":"reference","isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},{"type":"text","text":" by running the following command:"}],"type":"paragraph"},{"syntax":"bash","type":"codeListing","code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"]}]},{"content":[{"inlineContent":[{"text":"Open the new ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" folder, and drag the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" into the Project Navigator of your application’s Xcode project or existing workspace.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter."}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"code":"Targets","type":"codeVoice"},{"type":"text","text":" heading in the sidebar."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the tab bar at the top of that window, open the “General” panel.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Click on the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" button under the "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"You will see "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" folder with "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" nested inside."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device."}],"type":"paragraph"}],"type":"aside","style":"note"}]}]},{"text":"XCFramework","type":"heading","anchor":"XCFramework","level":4},{"inlineContent":[{"text":"You can also directly download the pre-built artifact from the GitHub releases page:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"code":"DynamicCodableKit-{version}.xcframework.zip","type":"codeVoice"},{"type":"text","text":" where "},{"code":"{version}","type":"codeVoice"},{"type":"text","text":" is the version you want to use."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Extract the XCFramework from the archive, and drag the ","type":"text"},{"code":"DynamicCodableKit.xcframework","type":"codeVoice"},{"text":" into the Project Navigator of your application’s target folder in your Xcode project.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Select "},{"code":"Copy items if needed","type":"codeVoice"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.xcframework","type":"codeVoice"},{"text":" is automagically added in the embedded ","type":"text"},{"code":"Frameworks and Libraries","type":"codeVoice"},{"text":" section, an in turn the linked framework in build phase.","type":"text"}]}],"type":"aside"}]}]}],"kind":"content"}],"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","type":"topic","title":"CollectionDecodeFailConfiguration","abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/contextprovider","title":"Decoding with Provided Context"},"https://cocoapods.org":{"url":"https:\/\/cocoapods.org","type":"link","title":"CocoaPods","identifier":"https:\/\/cocoapods.org","titleInlineContent":[{"type":"text","text":"CocoaPods"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"role":"symbol","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","title":"SequenceInitializable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","title":"DynamicDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"title":"DynamicCodableKit","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"url":"\/documentation\/dynamiccodablekit","kind":"symbol","role":"collection"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"role":"collectionGroup","kind":"article","url":"\/documentation\/dynamiccodablekit\/typeidentifier","title":"Decoding with Type Identifiers","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}]},"https://swift.org/package-manager/":{"url":"https:\/\/swift.org\/package-manager\/","type":"link","title":"Swift Package Manager","identifier":"https:\/\/swift.org\/package-manager\/","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"type":"topic","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"},{"text":".","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","title":"Using Default Value if Decoding Fails"},"https://git-scm.com/docs/git-submodule":{"url":"https:\/\/git-scm.com\/docs\/git-submodule","type":"link","title":"submodule","identifier":"https:\/\/git-scm.com\/docs\/git-submodule","titleInlineContent":[{"type":"text","text":"submodule"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"abstract":[{"type":"text","text":"Cast self as generic  type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"required":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"codingPath"},{"kind":"text","text":": ["},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","title":"castAs(type:codingPath:)","defaultImplementations":4,"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","kind":"article","url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"url":"\/documentation\/dynamiccodablekit\/collectiondecoding","type":"topic","title":"Configure Collection Type Decoding","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true},{"type":"text","text":" value."}],"kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","type":"topic","title":"DynamicEncodable","abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"role":"symbol"},"https://github.com/Carthage/Carthage":{"url":"https:\/\/github.com\/Carthage\/Carthage","type":"link","title":"Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage","titleInlineContent":[{"type":"text","text":"Carthage"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","title":"DynamicDecodingDefaultValueProvider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","type":"topic","title":"DynamicCodable","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"role":"symbol"}}}