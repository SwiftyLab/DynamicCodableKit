{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"reference","isActive":true},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference","isActive":true},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"reference","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},{"type":"heading","level":2,"anchor":"Requirements","text":"Requirements"},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimum Swift Version"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"text":"Status","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Linux","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Windows","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.3","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]]],"header":"row"},{"type":"heading","level":2,"anchor":"Installation","text":"Installation"},{"type":"heading","level":3,"anchor":"CocoaPods","text":"CocoaPods"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/cocoapods.org","isActive":true,"type":"reference"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["pod 'DynamicCodableKit'"],"syntax":"ruby"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" with the required version you want to use:"}]},{"type":"codeListing","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby"},{"type":"heading","level":3,"anchor":"Carthage","text":"Carthage"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true,"type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl"},{"type":"heading","level":3,"anchor":"Swift-Package-Manager","text":"Swift Package Manager"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/swift.org\/package-manager\/","isActive":true,"type":"reference"},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"code":"swift","type":"codeVoice"},{"type":"text","text":" compiler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}]},{"type":"codeListing","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"type":"codeVoice","code":"{version}"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"{checksum}"},{"text":" with the required version and checksum of artifact you want to use:","type":"text"}]},{"type":"codeListing","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift"},{"type":"heading","level":3,"anchor":"Manually","text":"Manually"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your project manually."}]},{"type":"heading","level":4,"anchor":"Git-Submodule","text":"Git Submodule"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open up Terminal, "},{"code":"cd","type":"codeVoice"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}]},{"code":["$ git init"],"syntax":"bash","type":"codeListing"}]},{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" as a git ","type":"text"},{"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","isActive":true,"type":"reference"},{"text":" by running the following command:","type":"text"}],"type":"paragraph"},{"syntax":"bash","code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"type":"codeListing"}]},{"content":[{"inlineContent":[{"text":"Open the new ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" folder, and drag the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" into the Project Navigator of your application’s Xcode project or existing workspace.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter."}]}],"style":"note","type":"aside"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"type":"text","text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"code":"Targets","type":"codeVoice"},{"type":"text","text":" heading in the sidebar."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the tab bar at the top of that window, open the “General” panel."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Click on the ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" button under the ","type":"text"},{"code":"Frameworks and Libraries","type":"codeVoice"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You will see ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" folder with ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" nested inside.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" and that’s it!"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device.","type":"text"}]}],"style":"note"}]}],"type":"unorderedList"},{"type":"heading","level":4,"anchor":"XCFramework","text":"XCFramework"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also directly download the pre-built artifact from the GitHub releases page:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"type":"codeVoice","code":"DynamicCodableKit-{version}.xcframework.zip"},{"type":"text","text":" where "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" is the version you want to use."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Extract the XCFramework from the archive, and drag the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"text":" into the Project Navigator of your application’s target folder in your Xcode project.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select "},{"code":"Copy items if needed","type":"codeVoice"},{"type":"text","text":" and that’s it!"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" is automagically added in the embedded "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section, an in turn the linked framework in build phase."}]}],"style":"note"}]}],"type":"unorderedList"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"metadata":{"role":"collection","symbolKind":"module","title":"DynamicCodableKit","modules":[{"name":"DynamicCodableKit"}],"externalID":"DynamicCodableKit","roleHeading":"Framework"},"sections":[],"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"role":"collection","kind":"symbol","url":"\/documentation\/dynamiccodablekit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","title":"DynamicCodableKit"},"https://github.com/Carthage/Carthage":{"identifier":"https:\/\/github.com\/Carthage\/Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"type":"link","url":"https:\/\/github.com\/Carthage\/Carthage","title":"Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"defaultImplementations":4,"required":true,"title":"castAs(type:codingPath:)","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","title":"Using Default Value if Decoding Fails","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"topic","title":"DynamicDecodingContext"},"https://cocoapods.org":{"identifier":"https:\/\/cocoapods.org","titleInlineContent":[{"type":"text","text":"CocoaPods"}],"type":"link","url":"https:\/\/cocoapods.org","title":"CocoaPods"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"role":"symbol","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","title":"DynamicDecodingDefaultValueProvider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"kind":"symbol","abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"type":"topic","role":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","title":"SequenceInitializable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"role":"collectionGroup","title":"Configure Collection Type Decoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true},{"type":"text","text":" value."}],"kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"kind":"symbol","type":"topic","title":"DynamicDecodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","abstract":[{"text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding and encoding","type":"text"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"title":"DynamicCodable","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"topic","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","kind":"symbol","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"title":"CollectionDecodeFailConfiguration","abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}]},"https://git-scm.com/docs/git-submodule":{"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"type":"link","url":"https:\/\/git-scm.com\/docs\/git-submodule","title":"submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"title":"Decoding with Parent CodingKey","role":"collectionGroup","type":"topic","url":"\/documentation\/dynamiccodablekit\/containercodingkey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"kind":"article"},"https://swift.org/package-manager/":{"identifier":"https:\/\/swift.org\/package-manager\/","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"link","url":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}],"kind":"symbol","type":"topic","title":"DynamicEncodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"role":"collectionGroup","kind":"article","url":"\/documentation\/dynamiccodablekit\/contextprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","title":"Decoding with Provided Context"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier","kind":"article","title":"Decoding with Type Identifiers","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}]}}}