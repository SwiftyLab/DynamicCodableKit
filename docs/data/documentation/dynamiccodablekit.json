{"kind":"symbol","hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"schemaVersion":{"minor":2,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The data types, protocols, and property wrappers defined by ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" can be used to provide dynamic decoding functionality to swift’s ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"paragraph"},{"anchor":"Requirements","level":2,"text":"Requirements","type":"heading"},{"rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimum Swift Version"}]}],[{"type":"paragraph","inlineContent":[{"text":"Installation","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Status","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Linux","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not Tested but Supported"}]}]]],"type":"table","header":"row"},{"anchor":"Installation","level":2,"text":"Installation","type":"heading"},{"anchor":"CocoaPods","level":3,"text":"CocoaPods","type":"heading"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/cocoapods.org"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"ruby","code":["pod 'DynamicCodableKit'"],"type":"codeListing"},{"anchor":"Carthage","level":3,"text":"Carthage","type":"heading"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"ogdl","code":["github \"SwiftyLab\/DynamicCodableKit\""],"type":"codeListing"},{"anchor":"Swift-Package-Manager","level":3,"text":"Swift Package Manager","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"https:\/\/swift.org\/package-manager\/","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"code":"swift","type":"codeVoice"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", .upToNextMajor(from: \"1.0.0\"))","]"],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"metadata":{"role":"collection","title":"DynamicCodableKit","externalID":"DynamicCodableKit","roleHeading":"Framework","modules":[{"name":"DynamicCodableKit"}],"symbolKind":"module"},"references":{"https://swift.org/package-manager/":{"type":"link","title":"Swift Package Manager","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"url":"https:\/\/swift.org\/package-manager\/","identifier":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"kind":"article","title":"Decoding with Provided Context","url":"\/documentation\/dynamiccodablekit\/contextprovider","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"type":"topic","title":"DynamicDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"role":"symbol","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"title":"DynamicCodable","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding and encoding","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"title":"CollectionDecodeFailConfiguration","role":"symbol","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","title":"DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"title":"castAs(type:codingPath:)","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","kind":"symbol","defaultImplementations":4,"abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"castAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"kind":"article","title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic"},"https://github.com/Carthage/Carthage":{"type":"link","title":"Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"url":"https:\/\/github.com\/Carthage\/Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"type":"topic","role":"symbol","title":"DynamicDecodingContext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"kind":"symbol"},"https://cocoapods.org":{"type":"link","title":"CocoaPods","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"url":"https:\/\/cocoapods.org","identifier":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"kind":"article","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"kind":"symbol","role":"symbol","type":"topic","title":"SequenceInitializable","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","role":"collectionGroup","kind":"article","title":"Configure Collection Type Decoding","abstract":[{"text":"Customize collection decoding failure handling with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration"},{"text":" value.","type":"text"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","kind":"article","role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/containercodingkey","type":"topic","title":"Decoding with Parent CodingKey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"title":"DynamicDecodingDefaultValueProvider","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"type":"topic"}}}