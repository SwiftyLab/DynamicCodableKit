{"variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"DynamicCodableKit","roleHeading":"Framework","externalID":"DynamicCodableKit","modules":[{"name":"DynamicCodableKit"}],"symbolKind":"module","role":"collection"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"type":"paragraph"},{"text":"Requirements","type":"heading","level":2,"anchor":"Requirements"},{"type":"table","header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimum Swift Version"}]}],[{"type":"paragraph","inlineContent":[{"text":"Installation","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Status"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"CocoaPods, Carthage, Swift Package Manager, Manual"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Linux"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.3","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]]]},{"text":"Installation","type":"heading","level":2,"anchor":"Installation"},{"text":"CocoaPods","type":"heading","level":3,"anchor":"CocoaPods"},{"inlineContent":[{"type":"reference","identifier":"https:\/\/cocoapods.org","isActive":true},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"ruby","type":"codeListing","code":["pod 'DynamicCodableKit'"]},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" with the required version you want to use:"}],"type":"paragraph"},{"syntax":"ruby","type":"codeListing","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"]},{"text":"Carthage","type":"heading","level":3,"anchor":"Carthage"},{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"type":"codeVoice","code":"Cartfile"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"ogdl","type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""]},{"text":"Swift Package Manager","type":"heading","level":3,"anchor":"Swift-Package-Manager"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"]},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" and "},{"type":"codeVoice","code":"{checksum}"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"]},{"text":"Manually","type":"heading","level":3,"anchor":"Manually"},{"inlineContent":[{"text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your project manually.","type":"text"}],"type":"paragraph"},{"text":"Git Submodule","type":"heading","level":4,"anchor":"Git-Submodule"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Open up Terminal, ","type":"text"},{"code":"cd","type":"codeVoice"},{"text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["$ git init"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" as a git "},{"isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","type":"reference"},{"type":"text","text":" by running the following command:"}]},{"code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"syntax":"bash","type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the new "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" folder, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" into the Project Navigator of your application’s Xcode project or existing workspace."}]},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter."}],"type":"paragraph"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"type":"codeVoice","code":"Targets"},{"type":"text","text":" heading in the sidebar."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the tab bar at the top of that window, open the “General” panel.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Click on the ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" button under the ","type":"text"},{"type":"codeVoice","code":"Frameworks and Libraries"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will see "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" folder with "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" nested inside."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"type":"text","text":" and that’s it!"}]},{"name":"Note","type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device.","type":"text"}],"type":"paragraph"}],"style":"note"}]}]},{"text":"XCFramework","type":"heading","level":4,"anchor":"XCFramework"},{"inlineContent":[{"text":"You can also directly download the pre-built artifact from the GitHub releases page:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"type":"codeVoice","code":"DynamicCodableKit-{version}.xcframework.zip"},{"type":"text","text":" where "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" is the version you want to use."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extract the XCFramework from the archive, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" into the Project Navigator of your application’s target folder in your Xcode project."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select ","type":"text"},{"type":"codeVoice","code":"Copy items if needed"},{"text":" and that’s it!","type":"text"}]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"DynamicCodableKit.xcframework","type":"codeVoice"},{"type":"text","text":" is automagically added in the embedded "},{"code":"Frameworks and Libraries","type":"codeVoice"},{"type":"text","text":" section, an in turn the linked framework in build phase."}]}]}]}]}]}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"]}],"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","interfaceLanguage":"swift"},"kind":"symbol","references":{"https://swift.org/package-manager/":{"url":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"link","identifier":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"role":"symbol","title":"DynamicEncodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"role":"symbol","title":"DynamicDecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"url":"\/documentation\/dynamiccodablekit\/typeidentifier","title":"Decoding with Type Identifiers","role":"collectionGroup","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"role":"symbol","title":"DynamicCodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","title":"Configure Collection Type Decoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration"},{"type":"text","text":" value."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"role":"symbol","title":"DynamicDecodingDefaultValueProvider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}]},"https://git-scm.com/docs/git-submodule":{"url":"https:\/\/git-scm.com\/docs\/git-submodule","title":"submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"type":"link","identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},"https://cocoapods.org":{"url":"https:\/\/cocoapods.org","title":"CocoaPods","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"type":"link","identifier":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"kind":"symbol","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"role":"symbol","type":"topic","title":"DynamicDecodingContext","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}]},"https://github.com/Carthage/Carthage":{"url":"https:\/\/github.com\/Carthage\/Carthage","title":"Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"castAs(type:codingPath:)","role":"symbol","defaultImplementations":4,"type":"topic","abstract":[{"text":"Cast self as generic  type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":".","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"title":"SequenceInitializable","role":"symbol","navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","title":"DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","title":"CollectionDecodeFailConfiguration","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"text":".","type":"text"}],"role":"collectionGroup","title":"Using Default Value if Decoding Fails","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"type":"topic","url":"\/documentation\/dynamiccodablekit\/contextprovider","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}],"title":"Decoding with Provided Context","kind":"article"}}}