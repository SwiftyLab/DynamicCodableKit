{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"The data types, protocols, and property wrappers defined by ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" can be used to provide dynamic decoding functionality to swift’s ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}]},{"level":2,"anchor":"Requirements","text":"Requirements","type":"heading"},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Status"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Linux","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fully Tested","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not Tested but Supported"}]}]]],"header":"row"},{"level":2,"anchor":"Installation","text":"Installation","type":"heading"},{"level":3,"anchor":"CocoaPods","text":"CocoaPods","type":"heading"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/cocoapods.org","type":"reference","isActive":true},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"type":"codeVoice","code":"Podfile"},{"text":":","type":"text"}]},{"type":"codeListing","code":["pod 'DynamicCodableKit'"],"syntax":"ruby"},{"level":3,"anchor":"Carthage","text":"Carthage","type":"heading"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true,"type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl"},{"level":3,"anchor":"Swift-Package-Manager","text":"Swift Package Manager","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"https:\/\/swift.org\/package-manager\/","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}]},{"type":"codeListing","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", .upToNextMajor(from: \"1.0.0\"))","]"],"syntax":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[[]]},"kind":"symbol","variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"metadata":{"externalID":"DynamicCodableKit","symbolKind":"module","modules":[{"name":"DynamicCodableKit"}],"roleHeading":"Framework","title":"DynamicCodableKit","role":"collection"},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","type":"topic","title":"Using Default Value if Decoding Fails","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","kind":"article","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"title":"DynamicEncodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}],"abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"allowing dynamic encoding."}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","title":"DynamicDecodable","role":"symbol","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"title":"Decoding with Provided Context","kind":"article","url":"\/documentation\/dynamiccodablekit\/contextprovider","type":"topic","role":"collectionGroup","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"url":"\/documentation\/dynamiccodablekit\/collectiondecoding","abstract":[{"text":"Customize collection decoding failure handling with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"reference"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","role":"collectionGroup","title":"Configure Collection Type Decoding","type":"topic","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"role":"symbol","title":"CollectionDecodeFailConfiguration","type":"topic","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}],"role":"collectionGroup","kind":"article","type":"topic","title":"Decoding with Type Identifiers","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","url":"\/documentation\/dynamiccodablekit\/typeidentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"title":"SequenceInitializable","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","type":"topic","role":"symbol","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}]},"https://swift.org/package-manager/":{"title":"Swift Package Manager","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"link","identifier":"https:\/\/swift.org\/package-manager\/","url":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"title":"castAs(type:codingPath:)","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","defaultImplementations":4,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","abstract":[{"type":"text","text":"Cast self as generic  type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"required":true,"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic","title":"DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","kind":"symbol","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","role":"symbol","type":"topic","title":"DynamicDecodingContext","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContext"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"title":"DynamicCodableKit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","kind":"symbol","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"url":"\/documentation\/dynamiccodablekit","role":"collection"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","title":"Decoding with Parent CodingKey","role":"collectionGroup","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","title":"DynamicCodable","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","abstract":[{"text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"kind":"symbol"},"https://cocoapods.org":{"title":"CocoaPods","titleInlineContent":[{"type":"text","text":"CocoaPods"}],"type":"link","identifier":"https:\/\/cocoapods.org","url":"https:\/\/cocoapods.org"},"https://github.com/Carthage/Carthage":{"title":"Carthage","titleInlineContent":[{"type":"text","text":"Carthage"}],"type":"link","identifier":"https:\/\/github.com\/Carthage\/Carthage","url":"https:\/\/github.com\/Carthage\/Carthage"}}}