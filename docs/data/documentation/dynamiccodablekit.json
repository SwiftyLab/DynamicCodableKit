{"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"reference"},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference"},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"type":"paragraph"},{"anchor":"Requirements","text":"Requirements","level":2,"type":"heading"},{"rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"inlineContent":[{"type":"text","text":"Status"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Linux"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Windows","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"5.3"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Fully Tested","type":"text"}],"type":"paragraph"}]]],"type":"table","header":"row"},{"anchor":"Installation","text":"Installation","level":2,"type":"heading"},{"anchor":"CocoaPods","text":"CocoaPods","level":3,"type":"heading"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/cocoapods.org","type":"reference"},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"code":"Podfile","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit'"],"type":"codeListing","syntax":"ruby"},{"inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"type":"codeListing","syntax":"ruby"},{"anchor":"Carthage","text":"Carthage","level":3,"type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage"},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"code":"Cartfile","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["github \"SwiftyLab\/DynamicCodableKit\""],"type":"codeListing","syntax":"ogdl"},{"anchor":"Swift-Package-Manager","text":"Swift Package Manager","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"https:\/\/swift.org\/package-manager\/","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"code":"{version}","type":"codeVoice"},{"type":"text","text":" and "},{"code":"{checksum}","type":"codeVoice"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"type":"codeListing","syntax":"swift"},{"anchor":"Manually","text":"Manually","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your project manually."}],"type":"paragraph"},{"anchor":"Git-Submodule","text":"Git Submodule","level":4,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Open up Terminal, "},{"type":"codeVoice","code":"cd"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}],"type":"paragraph"},{"syntax":"bash","type":"codeListing","code":["$ git init"]}]},{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a git ","type":"text"},{"type":"reference","identifier":"https:\/\/git-scm.com\/docs\/git-submodule","isActive":true},{"text":" by running the following command:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the new "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" folder, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" into the Project Navigator of your application’s Xcode project or existing workspace."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the ","type":"text"},{"type":"codeVoice","code":"Targets"},{"text":" heading in the sidebar.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the tab bar at the top of that window, open the “General” panel."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" button under the "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"You will see ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"text":" folder with ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"text":" nested inside.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" and that’s it!","type":"text"}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device."}],"type":"paragraph"}],"style":"note"}]}]},{"anchor":"XCFramework","text":"XCFramework","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"You can also directly download the pre-built artifact from the GitHub releases page:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Download the artifact from the GitHub releases page of the format ","type":"text"},{"code":"DynamicCodableKit-{version}.xcframework.zip","type":"codeVoice"},{"text":" where ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" is the version you want to use.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Extract the XCFramework from the archive, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" into the Project Navigator of your application’s target folder in your Xcode project."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select "},{"type":"codeVoice","code":"Copy items if needed"},{"type":"text","text":" and that’s it!"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" is automagically added in the embedded "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section, an in turn the linked framework in build phase."}]}],"type":"aside","style":"note"}]}]}],"kind":"content"}],"hierarchy":{"paths":[[]]},"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"metadata":{"title":"DynamicCodableKit","symbolKind":"module","modules":[{"name":"DynamicCodableKit"}],"externalID":"DynamicCodableKit","role":"collection","roleHeading":"Framework"},"kind":"symbol","variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"schemaVersion":{"patch":0,"major":0,"minor":2},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"title":"SequenceInitializable","type":"topic","abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}],"navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","role":"symbol","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","role":"symbol","title":"CollectionDecodeFailConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration"},"https://git-scm.com/docs/git-submodule":{"title":"submodule","identifier":"https:\/\/git-scm.com\/docs\/git-submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"type":"link","url":"https:\/\/git-scm.com\/docs\/git-submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","role":"symbol","title":"DynamicDecodingDefaultValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"title":"DynamicDecodable","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"title":"Decoding with Parent CodingKey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","kind":"article","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/containercodingkey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","role":"symbol","title":"DynamicDecodingContext","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}]},"https://cocoapods.org":{"title":"CocoaPods","identifier":"https:\/\/cocoapods.org","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"type":"link","url":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode."}],"role":"collectionGroup","type":"topic","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"required":true,"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","title":"castAs(type:codingPath:)","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"topic","defaultImplementations":4,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"},"https://github.com/Carthage/Carthage":{"title":"Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"type":"link","url":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"title":"Decoding with Provided Context","url":"\/documentation\/dynamiccodablekit\/contextprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","role":"collectionGroup","type":"topic","kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"kind":"article","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","role":"collectionGroup","title":"Configure Collection Type Decoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol","title":"DynamicEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","title":"DynamicCodable","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}]},"https://swift.org/package-manager/":{"title":"Swift Package Manager","identifier":"https:\/\/swift.org\/package-manager\/","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"link","url":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"role":"collection","type":"topic","title":"DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","role":"collectionGroup","type":"topic","kind":"article","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}]}}}