{"sections":[],"hierarchy":{"paths":[[]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"The data types, protocols, and property wrappers defined by ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" can be used to provide dynamic decoding functionality to swift’s ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}]},{"anchor":"Requirements","type":"heading","level":2,"text":"Requirements"},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Platform"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Status"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"5.1","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Linux"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"text":"Swift Package Manager","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not Tested but Supported"}]}]]],"header":"row"},{"anchor":"Installation","type":"heading","level":2,"text":"Installation"},{"anchor":"CocoaPods","type":"heading","level":3,"text":"CocoaPods"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/cocoapods.org","type":"reference"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["pod 'DynamicCodableKit'"],"syntax":"ruby"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" with the required version you want to use:"}]},{"type":"codeListing","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"syntax":"ruby"},{"anchor":"Carthage","type":"heading","level":3,"text":"Carthage"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true,"type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl"},{"anchor":"Swift-Package-Manager","type":"heading","level":3,"text":"Swift Package Manager"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/"},{"text":" is a tool for automating the distribution of Swift code and is integrated into the ","type":"text"},{"type":"codeVoice","code":"swift"},{"text":" compiler.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"type":"codeVoice","code":"dependencies"},{"text":" value of your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":".","type":"text"}]},{"type":"codeListing","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"{checksum}","type":"codeVoice"},{"text":" with the required version and checksum of artifact you want to use:","type":"text"}]},{"type":"codeListing","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"syntax":"swift"},{"anchor":"Manually","type":"heading","level":3,"text":"Manually"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your project manually."}]},{"anchor":"Git-Submodule","type":"heading","level":4,"text":"Git Submodule"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open up Terminal, "},{"type":"codeVoice","code":"cd"},{"type":"text","text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:"}]},{"syntax":"bash","code":["$ git init"],"type":"codeListing"}]},{"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a git ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},{"text":" by running the following command:","type":"text"}],"type":"paragraph"},{"code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"],"syntax":"bash","type":"codeListing"}]},{"content":[{"inlineContent":[{"text":"Open the new ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" folder, and drag the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"text":" into the Project Navigator of your application’s Xcode project or existing workspace.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}]},{"content":[{"inlineContent":[{"type":"text","text":"Select the "},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"type":"text","text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"code":"Targets","type":"codeVoice"},{"type":"text","text":" heading in the sidebar."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the tab bar at the top of that window, open the “General” panel.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Click on the "},{"code":"+","type":"codeVoice"},{"type":"text","text":" button under the "},{"code":"Frameworks and Libraries","type":"codeVoice"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"You will see ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" folder with ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" nested inside.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" and that’s it!"}]},{"type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device.","type":"text"}],"type":"paragraph"}],"style":"note"}]}]},{"anchor":"XCFramework","type":"heading","level":4,"text":"XCFramework"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also directly download the pre-built artifact from the GitHub releases page:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Download the artifact from the GitHub releases page of the format ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit-{version}.xcframework.zip"},{"text":" where ","type":"text"},{"type":"codeVoice","code":"{version}"},{"text":" is the version you want to use.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Extract the XCFramework from the archive, and drag the "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" into the Project Navigator of your application’s target folder in your Xcode project."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Select ","type":"text"},{"code":"Copy items if needed","type":"codeVoice"},{"text":" and that’s it!","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"type":"text","text":" is automagically added in the embedded "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section, an in turn the linked framework in build phase."}],"type":"paragraph"}],"style":"note"}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"schemaVersion":{"major":0,"patch":0,"minor":2},"metadata":{"title":"DynamicCodableKit","role":"collection","externalID":"DynamicCodableKit","roleHeading":"Framework","modules":[{"name":"DynamicCodableKit"}],"symbolKind":"module"},"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"]}],"references":{"https://git-scm.com/docs/git-submodule":{"url":"https:\/\/git-scm.com\/docs\/git-submodule","title":"submodule","type":"link","titleInlineContent":[{"type":"text","text":"submodule"}],"identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","role":"collectionGroup","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","type":"topic","kind":"article","abstract":[{"text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"castAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"codingPath"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"defaultImplementations":4,"title":"castAs(type:codingPath:)","kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"role":"symbol","title":"DynamicDecodingContext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}]},"https://cocoapods.org":{"url":"https:\/\/cocoapods.org","title":"CocoaPods","type":"link","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"identifier":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"role":"collection","kind":"symbol"},"https://swift.org/package-manager/":{"url":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","type":"link","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"identifier":"https:\/\/swift.org\/package-manager\/"},"https://github.com/Carthage/Carthage":{"url":"https:\/\/github.com\/Carthage\/Carthage","title":"Carthage","type":"link","titleInlineContent":[{"text":"Carthage","type":"text"}],"identifier":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","kind":"article","role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","title":"Configure Collection Type Decoding","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"role":"collectionGroup","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"title":"DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"type":"topic","abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","role":"symbol","title":"CollectionDecodeFailConfiguration","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"role":"symbol","title":"DynamicDecodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"kind":"symbol","title":"DynamicCodable","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"role":"collectionGroup","title":"Decoding with Provided Context","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","url":"\/documentation\/dynamiccodablekit\/contextprovider","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","kind":"symbol","type":"topic","role":"symbol","title":"SequenceInitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"role":"symbol","title":"DynamicEncodable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic encoding.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}]}}}