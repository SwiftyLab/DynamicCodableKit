{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"schemaVersion":{"major":0,"patch":0,"minor":2},"metadata":{"role":"collection","modules":[{"name":"DynamicCodableKit"}],"externalID":"DynamicCodableKit","roleHeading":"Framework","symbolKind":"module","title":"DynamicCodableKit"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"reference"},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference"},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"type":"paragraph"},{"level":2,"anchor":"Requirements","type":"heading","text":"Requirements"},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Platform","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Minimum Swift Version","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Installation"}]}],[{"type":"paragraph","inlineContent":[{"text":"Status","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"CocoaPods, Carthage, Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Linux","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fully Tested"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"5.1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Package Manager"}]}],[{"type":"paragraph","inlineContent":[{"text":"Not Tested but Supported","type":"text"}]}]]]},{"level":2,"anchor":"Installation","type":"heading","text":"Installation"},{"level":3,"anchor":"CocoaPods","type":"heading","text":"CocoaPods"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/cocoapods.org"},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"ruby","code":["pod 'DynamicCodableKit'"],"type":"codeListing"},{"level":3,"anchor":"Carthage","type":"heading","text":"Carthage"},{"inlineContent":[{"identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true,"type":"reference"},{"text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using Carthage, specify it in your ","type":"text"},{"code":"Cartfile","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"ogdl","code":["github \"SwiftyLab\/DynamicCodableKit\""],"type":"codeListing"},{"level":3,"anchor":"Swift-Package-Manager","type":"heading","text":"Swift Package Manager"},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference"},{"text":" is a tool for automating the distribution of Swift code and is integrated into the ","type":"text"},{"code":"swift","type":"codeVoice"},{"text":" compiler.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", .upToNextMajor(from: \"1.0.0\"))","]"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"role":"symbol","title":"SequenceInitializable","abstract":[{"type":"text","text":"A type that can be initialized with a finite sequence of items."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"title":"DynamicCodable","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","type":"topic"},"https://cocoapods.org":{"titleInlineContent":[{"type":"text","text":"CocoaPods"}],"url":"https:\/\/cocoapods.org","identifier":"https:\/\/cocoapods.org","title":"CocoaPods","type":"link"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","kind":"article","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","role":"symbol","abstract":[{"type":"text","text":"Cast self as generic  type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","title":"castAs(type:codingPath:)","kind":"symbol","required":true,"defaultImplementations":4,"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"title":"DynamicEncodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"title":"DynamicDecodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"url":"\/documentation\/dynamiccodablekit","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","title":"DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"type":"topic","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","title":"CollectionDecodeFailConfiguration","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"type":"topic","title":"DynamicDecodingContext","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","title":"DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","role":"collectionGroup","kind":"article","title":"Decoding with Type Identifiers","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","title":"Configure Collection Type Decoding","url":"\/documentation\/dynamiccodablekit\/collectiondecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"title":"Decoding with Provided Context","kind":"article","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}],"url":"\/documentation\/dynamiccodablekit\/contextprovider","type":"topic"},"https://github.com/Carthage/Carthage":{"titleInlineContent":[{"type":"text","text":"Carthage"}],"url":"https:\/\/github.com\/Carthage\/Carthage","identifier":"https:\/\/github.com\/Carthage\/Carthage","title":"Carthage","type":"link"},"https://swift.org/package-manager/":{"titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"url":"https:\/\/swift.org\/package-manager\/","identifier":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","type":"link"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"title":"Decoding with Parent CodingKey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","role":"collectionGroup","type":"topic","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"kind":"article","url":"\/documentation\/dynamiccodablekit\/containercodingkey"}}}