{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"metadata":{"externalID":"DynamicCodableKit","modules":[{"name":"DynamicCodableKit"}],"roleHeading":"Framework","role":"collection","title":"DynamicCodableKit","symbolKind":"module"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","isActive":true},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","isActive":true},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"The data types, protocols, and property wrappers defined by ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" can be used to provide dynamic decoding functionality to swift’s ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"type":"paragraph"},{"anchor":"Requirements","text":"Requirements","level":2,"type":"heading"},{"rows":[[[{"inlineContent":[{"text":"Platform","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Minimum Swift Version","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Installation"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Status"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"5.1"}],"type":"paragraph"}],[{"inlineContent":[{"text":"CocoaPods, Carthage, Swift Package Manager, Manual","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Linux","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"5.1"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Windows"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"5.3"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Swift Package Manager","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Fully Tested","type":"text"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"anchor":"Installation","text":"Installation","level":2,"type":"heading"},{"anchor":"CocoaPods","text":"CocoaPods","level":3,"type":"heading"},{"inlineContent":[{"identifier":"https:\/\/cocoapods.org","type":"reference","isActive":true},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"code":"Podfile","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"ruby","code":["pod 'DynamicCodableKit'"],"type":"codeListing"},{"inlineContent":[{"text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing ","type":"text"},{"code":"{version}","type":"codeVoice"},{"text":" with the required version you want to use:","type":"text"}],"type":"paragraph"},{"syntax":"ruby","code":["pod 'DynamicCodableKit', :http => 'https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip'"],"type":"codeListing"},{"anchor":"Carthage","text":"Carthage","level":3,"type":"heading"},{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/Carthage\/Carthage","isActive":true},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"type":"codeVoice","code":"Cartfile"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"ogdl","code":["github \"SwiftyLab\/DynamicCodableKit\""],"type":"codeListing"},{"anchor":"Swift-Package-Manager","text":"Swift Package Manager","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/swift.org\/package-manager\/","isActive":true,"type":"reference"},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}],"type":"paragraph"},{"inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"type":"codeVoice","code":"dependencies"},{"text":" value of your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", from: \"1.0.0\"),"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Optionally, you can also use the pre-built XCFramework from the GitHub releases page by replacing "},{"type":"codeVoice","code":"{version}"},{"type":"text","text":" and "},{"type":"codeVoice","code":"{checksum}"},{"type":"text","text":" with the required version and checksum of artifact you want to use:"}],"type":"paragraph"},{"syntax":"swift","code":[".binaryTarget(name: \"DynamicCodableKit\", url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit\/releases\/download\/v{version}\/DynamicCodableKit-{version}.xcframework.zip\", checksum: \"{checksum}\"),"],"type":"codeListing"},{"anchor":"Manually","text":"Manually","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"If you prefer not to use any of the aforementioned dependency managers, you can integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your project manually."}],"type":"paragraph"},{"anchor":"Git-Submodule","text":"Git Submodule","level":4,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Open up Terminal, ","type":"text"},{"code":"cd","type":"codeVoice"},{"text":" into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:","type":"text"}]},{"type":"codeListing","syntax":"bash","code":["$ git init"]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" as a git "},{"type":"reference","isActive":true,"identifier":"https:\/\/git-scm.com\/docs\/git-submodule"},{"type":"text","text":" by running the following command:"}],"type":"paragraph"},{"syntax":"bash","type":"codeListing","code":["$ git submodule add https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git"]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Open the new ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" folder, and drag the ","type":"text"},{"code":"DynamicCodableKit.xcodeproj","type":"codeVoice"},{"text":" into the Project Navigator of your application’s Xcode project or existing workspace.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.","type":"text"}]}],"name":"Note","style":"note"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" in the Project Navigator and verify the deployment target satisfies that of your application target (should be less or equal)."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "},{"type":"codeVoice","code":"Targets"},{"type":"text","text":" heading in the sidebar."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"In the tab bar at the top of that window, open the “General” panel."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" button under the "},{"type":"codeVoice","code":"Frameworks and Libraries"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You will see "},{"type":"codeVoice","code":"DynamicCodableKit.xcodeproj"},{"type":"text","text":" folder with "},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"type":"text","text":" nested inside."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Select the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.framework"},{"text":" and that’s it!","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"DynamicCodableKit.framework","type":"codeVoice"},{"type":"text","text":" is automagically added as a target dependency, linked framework and embedded framework in build phase which is all you need to build on the simulator and a device."}]}],"name":"Note","type":"aside"}]}],"type":"unorderedList"},{"anchor":"XCFramework","text":"XCFramework","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"You can also directly download the pre-built artifact from the GitHub releases page:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the artifact from the GitHub releases page of the format "},{"code":"DynamicCodableKit-{version}.xcframework.zip","type":"codeVoice"},{"type":"text","text":" where "},{"code":"{version}","type":"codeVoice"},{"type":"text","text":" is the version you want to use."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Extract the XCFramework from the archive, and drag the ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit.xcframework"},{"text":" into the Project Navigator of your application’s target folder in your Xcode project.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select ","type":"text"},{"code":"Copy items if needed","type":"codeVoice"},{"text":" and that’s it!","type":"text"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"DynamicCodableKit.xcframework","type":"codeVoice"},{"text":" is automagically added in the embedded ","type":"text"},{"code":"Frameworks and Libraries","type":"codeVoice"},{"text":" section, an in turn the linked framework in build phase.","type":"text"}],"type":"paragraph"}],"name":"Note"}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]},{"title":"Decoding Configurations","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]},{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"]},{"title":"Structures","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"]}],"kind":"symbol","references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}],"title":"Decoding with Provided Context","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","url":"\/documentation\/dynamiccodablekit\/contextprovider"},"https://git-scm.com/docs/git-submodule":{"title":"submodule","titleInlineContent":[{"text":"submodule","type":"text"}],"identifier":"https:\/\/git-scm.com\/docs\/git-submodule","type":"link","url":"https:\/\/git-scm.com\/docs\/git-submodule"},"https://github.com/Carthage/Carthage":{"title":"Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"link","url":"https:\/\/github.com\/Carthage\/Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode."}],"title":"Decoding with Type Identifiers","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","defaultImplementations":4,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","required":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","title":"castAs(type:codingPath:)"},"https://swift.org/package-manager/":{"title":"Swift Package Manager","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"identifier":"https:\/\/swift.org\/package-manager\/","type":"link","url":"https:\/\/swift.org\/package-manager\/"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"title":"DynamicDecodingDefaultValueProvider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"title":"DynamicCodable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicCodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","type":"topic","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamiccodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"title":"DynamicEncodable","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic encoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicencodable"},"https://cocoapods.org":{"title":"CocoaPods","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"identifier":"https:\/\/cocoapods.org","type":"link","url":"https:\/\/cocoapods.org"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","type":"topic","title":"SequenceInitializable","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}],"navigatorTitle":[{"text":"SequenceInitializable","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceInitializable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","title":"DynamicDecodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","kind":"article","role":"collectionGroup","type":"topic","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"text":".","type":"text"}],"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"kind":"symbol","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"title":"DynamicDecodingContext","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContext"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"title":"DynamicCodableKit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"abstract":[{"text":"Available dynamic array decoding configuration.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","navigatorTitle":[{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","title":"CollectionDecodeFailConfiguration"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","role":"collectionGroup","type":"topic","url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"abstract":[{"text":"Customize collection decoding failure handling with ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"reference","isActive":true},{"text":" value.","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","title":"Configure Collection Type Decoding"}}}