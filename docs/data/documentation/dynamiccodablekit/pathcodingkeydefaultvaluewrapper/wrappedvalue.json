{"schemaVersion":{"minor":2,"patch":0,"major":0},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"modules":[{"name":"DynamicCodableKit"}],"externalID":"s:17DynamicCodableKit32PathCodingKeyDefaultValueWrapperV07wrappedH0xvp","title":"wrappedValue","roleHeading":"Instance Property","symbolKind":"property","role":"symbol"},"abstract":[{"text":"The underlying ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"},{"text":" ","type":"text"},{"text":"that wraps coding key value referenced.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper\/wrappedvalue"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper\/wrappedValue"},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"title":"DynamicCodableKit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper":{"kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper","title":"PathCodingKeyDefaultValueWrapper","abstract":[{"text":"A property wrapper type that exposes value of provided coding key type","type":"text"},{"text":" ","type":"text"},{"text":"in a no throw approach from the path of coding keys taken to get to decoding this type.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"The underlying ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"},{"text":" ","type":"text"},{"text":"that wraps coding key value referenced.","type":"text"}],"title":"wrappedValue","url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper\/wrappedvalue","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper\/wrappedValue"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"title":"DynamicDecodingDefaultValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"type":"text","text":"."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"title":"Decoding with Parent CodingKey","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","role":"collectionGroup","type":"topic","kind":"article"}}}