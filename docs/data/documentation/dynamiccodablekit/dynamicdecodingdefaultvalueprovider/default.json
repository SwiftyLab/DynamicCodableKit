{"variants":[{"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/default"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/default","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":2,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"]]},"metadata":{"modules":[{"name":"DynamicCodableKit"}],"symbolKind":"property","required":true,"roleHeading":"Type Property","role":"symbol","title":"default","externalID":"s:17DynamicCodableKit0A28DecodingDefaultValueProviderP7defaultxvpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]},"sections":[],"abstract":[{"type":"text","text":"Default value to use when decoding fails."}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"title":"DynamicDecodingDefaultValueProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider/default":{"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/default","role":"symbol","title":"default","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/default","abstract":[{"type":"text","text":"Default value to use when decoding fails."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","required":true},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","role":"collection","title":"DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"kind":"symbol","type":"topic"}}}