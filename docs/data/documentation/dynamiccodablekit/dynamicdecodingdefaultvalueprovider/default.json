{"schemaVersion":{"minor":2,"patch":0,"major":0},"abstract":[{"text":"Default value to use when decoding fails.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}]}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/default","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/default"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"]]},"metadata":{"roleHeading":"Type Property","required":true,"modules":[{"name":"DynamicCodableKit"}],"externalID":"s:17DynamicCodableKit0A28DecodingDefaultValueProviderP7defaultxvpZ","title":"default","symbolKind":"property","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","role":"collectionGroup","title":"Using Default Value if Decoding Fails"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"title":"DynamicDecodingDefaultValueProvider","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider/default":{"required":true,"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"default","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/default","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/default","abstract":[{"type":"text","text":"Default value to use when decoding fails."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","url":"\/documentation\/dynamiccodablekit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"title":"DynamicCodableKit","role":"collection","type":"topic"}}}