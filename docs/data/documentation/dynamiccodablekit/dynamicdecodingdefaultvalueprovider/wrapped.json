{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/wrapped"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/Wrapped"},"schemaVersion":{"major":0,"patch":0,"minor":2},"metadata":{"modules":[{"name":"DynamicCodableKit"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Wrapped"}],"roleHeading":"Associated Type","title":"Wrapped","externalID":"s:17DynamicCodableKit0A28DecodingDefaultValueProviderP7WrappedQa","role":"symbol","required":true,"symbolKind":"associatedtype"},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"]]},"abstract":[{"text":"A type representing the stored value.","type":"text"}],"kind":"symbol","references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider/Wrapped":{"role":"symbol","required":true,"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider\/wrapped","type":"topic","title":"Wrapped","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider\/Wrapped","kind":"symbol","abstract":[{"type":"text","text":"A type representing the stored value."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"title":"DynamicCodableKit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"title":"DynamicDecodingDefaultValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"type":"text","text":"."}]}}}