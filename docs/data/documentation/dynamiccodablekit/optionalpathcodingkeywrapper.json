{"seeAlsoSections":[{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingArrayDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DefaultValueDynamicDecodingArrayDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingArrayDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingCollectionDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DefaultValueDynamicDecodingCollectionDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingCollectionDictionaryWrapper"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":"> = "},{"kind":"typeIdentifier","text":"PathCodingKeyDefaultValueWrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","preciseIdentifier":"s:17DynamicCodableKit32PathCodingKeyDefaultValueWrapperV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"code":"OptionalPathCodingKeyWrapper","type":"codeVoice"},{"text":" is a type alias for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"with ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" generic type as ","type":"text"},{"code":"Optional<CodingKey>","type":"codeVoice"},{"text":". If coding key value of provided type is not found,","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is used as underlying value instead of throwing error.","type":"text"}]}]}],"abstract":[{"type":"text","text":"A property wrapper type that exposes optional value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"from the path of coding keys taken to get to decoding this type."}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":2,"major":0},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper"]}],"metadata":{"roleHeading":"Type Alias","title":"OptionalPathCodingKeyWrapper","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"modules":[{"name":"DynamicCodableKit"}],"externalID":"s:17DynamicCodableKit28OptionalPathCodingKeyWrappera","navigatorTitle":[{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"role":"symbol","symbolKind":"typealias"},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/LossyDynamicDecodingArrayDictionaryWrapper":{"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingArrayDictionaryWrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LossyDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that decodes valid data into a dictionary value of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"text":" coding key and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"their dynamic "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" "},{"type":"text","text":"array value while ignoring invalid data."}],"title":"LossyDynamicDecodingArrayDictionaryWrapper","url":"\/documentation\/dynamiccodablekit\/lossydynamicdecodingarraydictionarywrapper","kind":"symbol","navigatorTitle":[{"text":"LossyDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/LossyDynamicDecodingCollectionDictionaryWrapper":{"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingCollectionDictionaryWrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LossyDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that decodes valid data into a dictionary value of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"text":" coding key and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"their dynamic "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" "},{"type":"text","text":"collection value while ignoring invalid data."}],"title":"LossyDynamicDecodingCollectionDictionaryWrapper","url":"\/documentation\/dynamiccodablekit\/lossydynamicdecodingcollectiondictionarywrapper","kind":"symbol","navigatorTitle":[{"text":"LossyDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"title":"OptionalPathCodingKeyWrapper","abstract":[{"type":"text","text":"A property wrapper type that exposes optional value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"from the path of coding keys taken to get to decoding this type."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}],"title":"PathCodingKeyDefaultValueWrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","navigatorTitle":[{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that exposes value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"in a no throw approach from the path of coding keys taken to get to decoding this type."}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DefaultValueDynamicDecodingCollectionDictionaryWrapper":{"kind":"symbol","type":"topic","title":"DefaultValueDynamicDecodingCollectionDictionaryWrapper","role":"symbol","navigatorTitle":[{"text":"DefaultValueDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that decodes valid data associated to key into a dictionary value of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"type":"text","text":" coding key and their dynamic"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},{"type":"text","text":" collection value"},{"type":"text","text":" "},{"type":"text","text":"while ignoring keys that contain invalid data."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DefaultValueDynamicDecodingCollectionDictionaryWrapper","url":"\/documentation\/dynamiccodablekit\/defaultvaluedynamicdecodingcollectiondictionarywrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultValueDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey/Contained":{"required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Contained"}],"abstract":[{"text":"The base type or base element type in case of collection,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for the data contained by this key."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey\/contained","title":"Contained","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DefaultValueDynamicDecodingArrayDictionaryWrapper":{"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DefaultValueDynamicDecodingArrayDictionaryWrapper","abstract":[{"text":"A property wrapper type that decodes valid data associated to key into a dictionary value of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"text":" coding key and their dynamic","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},{"type":"text","text":" array value while"},{"type":"text","text":" "},{"type":"text","text":"ignoring keys that contain invalid data."}],"title":"DefaultValueDynamicDecodingArrayDictionaryWrapper","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultValueDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/defaultvaluedynamicdecodingarraydictionarywrapper","navigatorTitle":[{"text":"DefaultValueDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/StrictDynamicDecodingCollectionDictionaryWrapper":{"navigatorTitle":[{"text":"StrictDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A property wrapper type that strictly decodes a dictionary value of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","type":"reference"},{"text":" coding key","type":"text"},{"text":" ","type":"text"},{"text":"and their dynamic ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","type":"reference"},{"text":" ","type":"text"},{"text":"collection value and throws error if decoding fails.","type":"text"}],"title":"StrictDynamicDecodingCollectionDictionaryWrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingCollectionDictionaryWrapper","url":"\/documentation\/dynamiccodablekit\/strictdynamicdecodingcollectiondictionarywrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrictDynamicDecodingCollectionDictionaryWrapper","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextContainerCodingKey"}],"abstract":[{"text":"A coding key type that can dynamically decode contained data.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextContainerCodingKey"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey","title":"DynamicDecodingContextContainerCodingKey","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","type":"topic","url":"\/documentation\/dynamiccodablekit\/containercodingkey","title":"Decoding with Parent CodingKey","role":"collectionGroup"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"role":"symbol","title":"DynamicDecodingDefaultValueProvider","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/StrictDynamicDecodingDictionaryWrapper":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrictDynamicDecodingDictionaryWrapper","kind":"identifier"}],"title":"StrictDynamicDecodingDictionaryWrapper","kind":"symbol","navigatorTitle":[{"text":"StrictDynamicDecodingDictionaryWrapper","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/strictdynamicdecodingdictionarywrapper","type":"topic","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingDictionaryWrapper","abstract":[{"text":"A property wrapper type that strictly decodes a dictionary value of ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"coding key and their dynamic ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" value and"},{"type":"text","text":" "},{"type":"text","text":"throws error if decoding fails."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"role":"collectionGroup","title":"Using Default Value if Decoding Fails","type":"topic","kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/LossyDynamicDecodingDictionaryWrapper":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingDictionaryWrapper","kind":"symbol","url":"\/documentation\/dynamiccodablekit\/lossydynamicdecodingdictionarywrapper","title":"LossyDynamicDecodingDictionaryWrapper","abstract":[{"text":"A property wrapper type that decodes valid data into a dictionary value of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","type":"reference"},{"text":" coding key and","type":"text"},{"text":" ","type":"text"},{"text":"their dynamic ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"value while ignoring invalid data.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LossyDynamicDecodingDictionaryWrapper"}],"navigatorTitle":[{"kind":"identifier","text":"LossyDynamicDecodingDictionaryWrapper"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/StrictDynamicDecodingArrayDictionaryWrapper":{"kind":"symbol","navigatorTitle":[{"text":"StrictDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingArrayDictionaryWrapper","role":"symbol","abstract":[{"text":"A property wrapper type that strictly decodes a dictionary value of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"text":" coding key","type":"text"},{"text":" ","type":"text"},{"text":"and their dynamic ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},{"text":" ","type":"text"},{"text":"array value and throws error if decoding fails.","type":"text"}],"type":"topic","title":"StrictDynamicDecodingArrayDictionaryWrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrictDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/strictdynamicdecodingarraydictionarywrapper"}}}