{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Contained"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"symbolKind":"associatedtype","externalID":"s:17DynamicCodableKit0A33DecodingContextContainerCodingKeyP9ContainedQa","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Contained","kind":"identifier"}],"roleHeading":"Associated Type","title":"Contained","modules":[{"name":"DynamicCodableKit"}],"required":true},"abstract":[{"type":"text","text":"The base type or base element type in case of collection,"},{"type":"text","text":" "},{"type":"text","text":"for the data contained by this key."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey\/contained"]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey":{"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextContainerCodingKey"}],"abstract":[{"text":"A coding key type that can dynamically decode contained data.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey","type":"topic","role":"symbol","title":"DynamicDecodingContextContainerCodingKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextContainerCodingKey"}],"kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"title":"DynamicCodableKit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","kind":"symbol","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"url":"\/documentation\/dynamiccodablekit","role":"collection"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"url":"\/documentation\/dynamiccodablekit\/containercodingkey","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","title":"Decoding with Parent CodingKey","role":"collectionGroup","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey/Contained":{"abstract":[{"text":"The base type or base element type in case of collection,","type":"text"},{"text":" ","type":"text"},{"text":"for the data contained by this key.","type":"text"}],"kind":"symbol","required":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","title":"Contained","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey\/contained","role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Contained","kind":"identifier"}]}}}