{"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"]]},"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"seeAlsoSections":[{"generated":true,"title":"Common Scenarios","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Alternative to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"},{"type":"text","text":", in some JSON responses different types of objects are already grouped with a specific parent coding key. Below is a JSON response for a social media page that contains different types of posts that are already grouped by post type:"}],"type":"paragraph"},{"code":["{","  \"content\": {","    \"text\": [","      {","        \"id\": \"00005678-abcd-efab-0123-456789abcdef\",","        \"type\": \"text\",","        \"author\": \"12345678-abcd-efab-0123-456789abcdef\",","        \"likes\": 145,","        \"createdAt\": \"2021-07-23T07:36:43Z\",","        \"text\": \"Lorem Ipsium\"","      }","    ],","    \"picture\": [","      {","        \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","        \"type\": \"picture\",","        \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","        \"likes\": 370,","        \"createdAt\": \"2021-07-23T09:32:13Z\",","        \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","        \"caption\": \"Lorem Ipsium\"","      }","    ],","    \"audio\": [","      {","        \"id\": \"64475bcb-caff-48c1-bb53-8376628b350b\",","        \"type\": \"audio\",","        \"author\": \"4c17c269-1c56-45ab-8863-d8924ece1d0b\",","        \"likes\": 25,","        \"createdAt\": \"2021-07-23T09:33:48Z\",","        \"url\": \"https:\/\/a.url.com\/to\/a\/audio.aac\",","        \"duration\": 60","      }","    ],","    \"video\": [","      {","        \"id\": \"98765432-abcd-efab-0123-456789abcdef\",","        \"type\": \"video\",","        \"author\": \"04355678-abcd-efab-0123-456789abcdef\",","        \"likes\": 2345,","        \"createdAt\": \"2021-07-23T09:36:38Z\",","        \"url\": \"https:\/\/a.url.com\/to\/a\/video.mp4\",","        \"duration\": 460,","        \"thumbnail\": \"https:\/\/a.url.com\/to\/a\/thmbnail.png\"","      }","    ]","  },","  \"next\": \"https:\/\/a.url.com\/to\/next\/page\"","}"],"syntax":"json","type":"codeListing"},{"anchor":"Create-Types-to-be-Decoded","level":3,"type":"heading","text":"Create Types to be Decoded"},{"inlineContent":[{"type":"text","text":"To summarize above JSON, posts can be either "},{"type":"strong","inlineContent":[{"text":"Text","type":"text"}]},{"type":"text","text":" based, includes "},{"type":"strong","inlineContent":[{"type":"text","text":"Picture"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"Audio","type":"text"}]},{"type":"text","text":" or "},{"type":"strong","inlineContent":[{"type":"text","text":"Video"}]},{"type":"text","text":". The "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field indicates the object type and indicates additional fields available while fields like "},{"type":"codeVoice","code":"id"},{"type":"text","text":", "},{"type":"codeVoice","code":"author"},{"type":"text","text":", "},{"type":"codeVoice","code":"likes"},{"type":"text","text":", "},{"type":"codeVoice","code":"createdAt"},{"type":"text","text":" are common for all types."},{"type":"text","text":" "},{"type":"image","identifier":"container-json"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Decoding dynamically can be handled by creating types representing every post type: "},{"type":"codeVoice","code":"TextPost"},{"type":"text","text":", "},{"type":"codeVoice","code":"PicturePost"},{"type":"text","text":", "},{"type":"codeVoice","code":"AudioPost"},{"type":"text","text":", "},{"type":"codeVoice","code":"VideoPost"},{"type":"text","text":" each confirming to "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference","isActive":true},{"type":"text","text":" and to protocol "},{"type":"codeVoice","code":"Post"},{"type":"text","text":" which represents common post type."},{"type":"text","text":" "},{"identifier":"identifier-class","type":"image"}],"type":"paragraph"},{"anchor":"Implement-Dynamic-Decoding-Contexts","level":3,"type":"heading","text":"Implement Dynamic Decoding Contexts"},{"inlineContent":[{"text":"Now ","type":"text"},{"code":"Post","type":"codeVoice"},{"text":" type can be dynamically decoded to its concrete type based on value of ","type":"text"},{"code":"PostCodingKey","type":"codeVoice"},{"text":" key. ","type":"text"},{"code":"PostCodingKey","type":"codeVoice"},{"text":" can be created as an ","type":"text"},{"code":"Enum","type":"codeVoice"},{"text":" confirming to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","type":"reference"},{"text":" while implementing the decoding context to use with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/containedContext-15p5u","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["enum PostCodingKey: String, Hashable, DynamicDecodingContextContainerCodingKey {","    case text, picture, audio, video","","    var containedContext: DynamicDecodingContext<Post> {","        switch self {","        case .text:","            return DynamicDecodingContext(decoding: TextPost.self)","        case .picture:","            return DynamicDecodingContext(decoding: PicturePost.self)","        case .audio:","            return DynamicDecodingContext(decoding: AudioPost.self)","        case .video:","            return DynamicDecodingContext(decoding: VideoPost.self)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Finally, "},{"type":"codeVoice","code":"PostPage"},{"type":"text","text":" can be decoded with all the dynamic post contents by using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingCollectionDictionaryWrapper"},{"type":"text","text":" property wrapper to wrap "},{"type":"codeVoice","code":"content"},{"type":"text","text":" dictionary."}],"type":"paragraph"},{"code":["struct PostPage: Decodable {","    let next: URL","    @StrictDynamicDecodingArrayDictionaryWrapper<PostCodingKey> var content: [PostCodingKey: Post]","}"],"syntax":"swift","type":"codeListing"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"You can use the lossy versions, i.e. ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingArrayDictionaryWrapper"},{"text":" to decode only valid post data while ignoring the rest. See more in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding"},{"text":".","type":"text"}]}],"type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dynamiccodablekit\/containercodingkey"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"modules":[{"name":"DynamicCodableKit"}],"role":"collectionGroup","title":"Decoding with Parent CodingKey"},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"]},{"title":"Property Wrappers","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingCollectionDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper"]},{"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingArrayDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingArrayDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingCollectionDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingCollectionDictionaryWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper"]}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","interfaceLanguage":"swift"},"kind":"article","references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"type":"topic","url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDecodeFailConfiguration","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","role":"symbol","title":"CollectionDecodeFailConfiguration","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"kind":"symbol","abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDictionaryWrapper":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDictionaryWrapper"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdictionarywrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDictionaryWrapper","kind":"symbol","title":"DynamicDecodingDictionaryWrapper","abstract":[{"type":"text","text":"A property wrapper type that decodes a dictionary value of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"type":"text","text":" coding key"},{"type":"text","text":" "},{"type":"text","text":"and their dynamic "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDictionaryWrapper"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey/containedContext-15p5u":{"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey\/containedcontext-15p5u","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containedContext","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17DynamicCodableKit0A15DecodingContextV","kind":"typeIdentifier","text":"DynamicDecodingContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Contained"},{"kind":"text","text":">"}],"defaultImplementations":1,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/containedContext-15p5u","required":true,"title":"containedContext","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The dynamic decoding context for the data contained by this key."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyWrapper","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathCodingKeyWrapper"}],"title":"PathCodingKeyWrapper","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathCodingKeyWrapper"}],"abstract":[{"type":"text","text":"A property wrapper type that exposes value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"from the path of coding keys taken to get to decoding this type."}],"url":"\/documentation\/dynamiccodablekit\/pathcodingkeywrapper","kind":"symbol"},"identifier-class":{"type":"image","identifier":"identifier-class","alt":"Decoded models hierarchy.","variants":[{"traits":["1x","light"],"url":"\/images\/identifier-class.png"},{"url":"\/images\/identifier-class~dark.png","traits":["1x","dark"]}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/StrictDynamicDecodingArrayDictionaryWrapper":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrictDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"navigatorTitle":[{"text":"StrictDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingArrayDictionaryWrapper","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/strictdynamicdecodingarraydictionarywrapper","abstract":[{"text":"A property wrapper type that strictly decodes a dictionary value of ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"coding key and their dynamic ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true,"type":"reference"},{"text":" array value and","type":"text"},{"text":" ","type":"text"},{"text":"throws error if decoding fails.","type":"text"}],"title":"StrictDynamicDecodingArrayDictionaryWrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"topic","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"title":"DynamicDecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"title":"Decoding with Provided Context","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","kind":"article","url":"\/documentation\/dynamiccodablekit\/contextprovider","type":"topic","role":"collectionGroup","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","role":"collection","title":"DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey/Contained":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Contained"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey\/contained","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","title":"Contained","abstract":[{"type":"text","text":"The base type or base element type in case of collection,"},{"type":"text","text":" "},{"type":"text","text":"for the data contained by this key."}],"required":true},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextContainerCodingKey":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextContainerCodingKey","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicDecodingContextContainerCodingKey","kind":"identifier"}],"role":"symbol","title":"DynamicDecodingContextContainerCodingKey","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcontainercodingkey","abstract":[{"type":"text","text":"A coding key type that can dynamically decode contained data."}],"kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"title":"Decoding with Type Identifiers","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","kind":"article","url":"\/documentation\/dynamiccodablekit\/typeidentifier","type":"topic","role":"collectionGroup","abstract":[{"text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/StrictDynamicDecodingCollectionDictionaryWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/StrictDynamicDecodingCollectionDictionaryWrapper","title":"StrictDynamicDecodingCollectionDictionaryWrapper","navigatorTitle":[{"kind":"identifier","text":"StrictDynamicDecodingCollectionDictionaryWrapper"}],"url":"\/documentation\/dynamiccodablekit\/strictdynamicdecodingcollectiondictionarywrapper","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StrictDynamicDecodingCollectionDictionaryWrapper"}],"abstract":[{"type":"text","text":"A property wrapper type that strictly decodes a dictionary value of "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","isActive":true},{"type":"text","text":" "},{"type":"text","text":"coding key and their dynamic "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" collection value"},{"type":"text","text":" "},{"type":"text","text":"and throws error if decoding fails."}],"type":"topic","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"type":"topic","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","role":"collectionGroup","title":"Configure Collection Type Decoding","kind":"article","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true},{"type":"text","text":" value."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/LossyDynamicDecodingArrayDictionaryWrapper":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LossyDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"navigatorTitle":[{"text":"LossyDynamicDecodingArrayDictionaryWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingArrayDictionaryWrapper","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/lossydynamicdecodingarraydictionarywrapper","abstract":[{"text":"A property wrapper type that decodes valid data into a dictionary value of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","isActive":true,"type":"reference"},{"text":" coding key and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"their dynamic "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" "},{"type":"text","text":"array value while ignoring invalid data."}],"title":"LossyDynamicDecodingArrayDictionaryWrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingCollectionDictionaryWrapper":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingCollectionDictionaryWrapper"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcollectiondictionarywrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingCollectionDictionaryWrapper","kind":"symbol","title":"DynamicDecodingCollectionDictionaryWrapper","abstract":[{"type":"text","text":"A property wrapper type that decodes a dictionary value of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey"},{"type":"text","text":" coding key"},{"type":"text","text":" "},{"type":"text","text":"and their dynamic "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained"},{"type":"text","text":" collection value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingCollectionDictionaryWrapper"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}],"title":"PathCodingKeyDefaultValueWrapper","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathCodingKeyDefaultValueWrapper"}],"abstract":[{"type":"text","text":"A property wrapper type that exposes value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"in a no throw approach from the path of coding keys taken to get to decoding this type."}],"url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/LossyDynamicDecodingCollectionDictionaryWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/LossyDynamicDecodingCollectionDictionaryWrapper","title":"LossyDynamicDecodingCollectionDictionaryWrapper","navigatorTitle":[{"kind":"identifier","text":"LossyDynamicDecodingCollectionDictionaryWrapper"}],"url":"\/documentation\/dynamiccodablekit\/lossydynamicdecodingcollectiondictionarywrapper","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LossyDynamicDecodingCollectionDictionaryWrapper"}],"abstract":[{"type":"text","text":"A property wrapper type that decodes valid data into a dictionary value of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey","isActive":true},{"type":"text","text":" coding key and"},{"type":"text","text":" "},{"type":"text","text":"their dynamic "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextContainerCodingKey\/Contained","isActive":true},{"type":"text","text":" "},{"type":"text","text":"collection value while ignoring invalid data."}],"type":"topic","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"navigatorTitle":[{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper","abstract":[{"text":"A property wrapper type that exposes optional value of provided coding key type","type":"text"},{"text":" ","type":"text"},{"text":"from the path of coding keys taken to get to decoding this type.","type":"text"}],"title":"OptionalPathCodingKeyWrapper"},"container-json":{"type":"image","identifier":"container-json","alt":"Social media page posts JSON data hierarchy.","variants":[{"traits":["1x","light"],"url":"\/images\/container-json.png"},{"url":"\/images\/container-json~dark.png","traits":["1x","dark"]}]}}}