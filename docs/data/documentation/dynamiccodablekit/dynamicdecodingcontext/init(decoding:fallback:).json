{"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Original"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Fallback"},{"kind":"text","text":">("},{"kind":"externalParam","text":"decoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Original"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"fallback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Fallback"},{"kind":"text","text":".Type)"}],"roleHeading":"Initializer","externalID":"s:17DynamicCodableKit0A15DecodingContextV8decoding8fallbackACyxGqd__m_qd_0_mtcAA0A9DecodableRd__AaGRd_0_r0_lufc","extendedModule":"DynamicCodableKit","role":"symbol","title":"init(decoding:fallback:)","modules":[{"name":"DynamicCodableKit"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Original","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Fallback","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"decoding","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Original","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fallbackType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fallback","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Original","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"DynamicDecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","kind":"typeIdentifier","preciseIdentifier":"s:17DynamicCodableKit0A9DecodableP"},{"text":", ","kind":"text"},{"text":"Fallback","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"DynamicDecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","kind":"typeIdentifier","preciseIdentifier":"s:17DynamicCodableKit0A9DecodableP"}],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The primary type to decode."}]}],"name":"type"},{"content":[{"inlineContent":[{"text":"The fallback type to decode if primary type decoding fails.","type":"text"}],"type":"paragraph"}],"name":"fallbackType"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["let context: DynamicDecodingContext<Decodable> = DynamicDecodingContext(decoding: Int.self, fallback: String.self)"]}],"kind":"content"}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":2,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/init(decoding:fallback:)"]}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]]},"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/init(decoding:fallback:)","interfaceLanguage":"swift"},"abstract":[{"text":"Creates new context for decoding provided ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference"},{"text":" type or array.","type":"text"},{"text":" ","type":"text"},{"text":"If decoding fails, decodes with provided fallback type.","type":"text"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"role":"symbol","title":"DynamicDecodingContext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","title":"DynamicCodableKit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"role":"collection","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext/init(decoding:fallback:)":{"kind":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/init(decoding:fallback:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Original"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Fallback"},{"kind":"text","text":">("},{"kind":"externalParam","text":"decoding"},{"text":": ","kind":"text"},{"text":"Original","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Fallback","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates new context for decoding provided "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","isActive":true,"type":"reference"},{"type":"text","text":" type or array."},{"type":"text","text":" "},{"type":"text","text":"If decoding fails, decodes with provided fallback type."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/init(decoding:fallback:)","title":"init(decoding:fallback:)"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"role":"symbol","title":"DynamicDecodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}]}}}