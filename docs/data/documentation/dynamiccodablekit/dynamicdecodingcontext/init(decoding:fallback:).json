{"schemaVersion":{"patch":0,"major":0,"minor":2},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/init(decoding:fallback:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/init(decoding:fallback:)"]}],"abstract":[{"text":"Creates new context for decoding provided ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" type or array.","type":"text"},{"text":" ","type":"text"},{"text":"If decoding fails, decodes with provided fallback type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Original"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Fallback"},{"kind":"text","text":">("},{"kind":"externalParam","text":"decoding"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Original"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"fallback"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fallbackType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Fallback"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Original"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","kind":"typeIdentifier","text":"DynamicDecodable","preciseIdentifier":"s:17DynamicCodableKit0A9DecodableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Fallback"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","kind":"typeIdentifier","text":"DynamicDecodable","preciseIdentifier":"s:17DynamicCodableKit0A9DecodableP"}]}]},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The primary type to decode.","type":"text"}]}]},{"name":"fallbackType","content":[{"inlineContent":[{"type":"text","text":"The fallback type to decode if primary type decoding fails."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"syntax":"swift","type":"codeListing","code":["let context: DynamicDecodingContext<Decodable> = DynamicDecodingContext(decoding: Int.self, fallback: String.self)"]}]}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"]]},"metadata":{"externalID":"s:17DynamicCodableKit0A15DecodingContextV8decoding8fallbackACyxGqd__m_qd_0_mtcAA0A9DecodableRd__AaGRd_0_r0_lufc","modules":[{"name":"DynamicCodableKit"}],"extendedModule":"DynamicCodableKit","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Original","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Fallback","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"decoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Original","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Fallback","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"title":"init(decoding:fallback:)","symbolKind":"init","role":"symbol"},"sections":[],"kind":"symbol","references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"type":"topic","role":"symbol","title":"DynamicDecodingContext","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContext"}],"kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"type":"topic","title":"DynamicDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"role":"symbol","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","title":"DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext/init(decoding:fallback:)":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext\/init(decoding:fallback:)","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext\/init(decoding:fallback:)","role":"symbol","abstract":[{"text":"Creates new context for decoding provided ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" type or array.","type":"text"},{"text":" ","type":"text"},{"text":"If decoding fails, decodes with provided fallback type.","type":"text"}],"title":"init(decoding:fallback:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Original","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Fallback","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"decoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Original","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Fallback","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}]}}}