{"sections":[],"seeAlsoSections":[{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper"]}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"genericParameter"},{"text":"> = ","kind":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","preciseIdentifier":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV","text":"DynamicDecodingDefaultValueWrapper","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Identified","kind":"typeIdentifier"},{"text":">> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","preciseIdentifier":"s:17DynamicCodableKit0A24DecodingContextCodingKeyP","text":"DynamicDecodingContextCodingKey","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OptionalDynamicDecodingWrapper"},{"text":" is a type alias for","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"with wrapped value as optional dynamic value. If decoding fails,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is used as underlying value instead of throwing error.","type":"text"}]}],"kind":"content"}],"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","type":"reference"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper","interfaceLanguage":"swift"},"metadata":{"externalID":"s:17DynamicCodableKit08OptionalA15DecodingWrappera","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"roleHeading":"Type Alias","role":"symbol","title":"OptionalDynamicDecodingWrapper","symbolKind":"typealias","modules":[{"name":"DynamicCodableKit"}],"navigatorTitle":[{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextProvider":{"kind":"symbol","abstract":[{"type":"text","text":"A type that decides dynamic decoding context based on provided "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"."}],"title":"DynamicDecodingContextProvider","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextProvider"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextprovider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextProvider"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"title":"DynamicCodableKit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingContextBasedWrapper":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalDynamicDecodingContextBasedWrapper"}],"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingContextBasedWrapper"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper","type":"topic","title":"OptionalDynamicDecodingContextBasedWrapper","url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingcontextbasedwrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"abstract":[{"text":"A property wrapper type that exposes optional value of provided coding key type","type":"text"},{"text":" ","type":"text"},{"text":"from the path of coding keys taken to get to decoding this type.","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","type":"topic","title":"OptionalPathCodingKeyWrapper","url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"kind":"article","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or multiple identifiers that indicates the actual type to decode."}],"title":"Decoding with Type Identifiers","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","kind":"article","role":"collectionGroup","type":"topic","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"text":".","type":"text"}],"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"title":"DynamicDecodingDefaultValueProvider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"kind":"symbol","abstract":[{"type":"text","text":"A coding key type that decides dynamic decoding context based on its associated "},{"type":"codeVoice","code":"KeyedDecodingContainer"},{"type":"text","text":"."}],"title":"DynamicDecodingContextCodingKey","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextCodingKey"}],"type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextCodingKey"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingWrapper":{"url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"kind":"symbol","abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"type":"text","text":"."}],"role":"symbol","title":"OptionalDynamicDecodingWrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper","navigatorTitle":[{"kind":"identifier","text":"OptionalDynamicDecodingWrapper"}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueWrapper"}],"kind":"symbol","abstract":[{"text":"A property wrapper type that decodes dynamic value in a no throw approach based on","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dynamic decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"type":"text","text":"."}],"role":"symbol","title":"DynamicDecodingDefaultValueWrapper","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueWrapper"}],"type":"topic"}}}