{"abstract":[{"type":"text","text":"Creates new instance with an underlying dynamic wrapped value."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper\/init(wrappedvalue:)"]}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper\/init(wrappedValue:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An initial value with wrapped dynamic value.","type":"text"}]}],"name":"wrappedValue"}]}],"metadata":{"roleHeading":"Initializer","symbolKind":"init","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}],"modules":[{"name":"DynamicCodableKit"}],"externalID":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV07wrappedF0ACyxq_Gq__tcfc","title":"init(wrappedValue:)"},"kind":"symbol","references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingContextCodingKey"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","abstract":[{"text":"A coding key type that decides dynamic decoding context based on its associated ","type":"text"},{"code":"KeyedDecodingContainer","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicDecodingContextCodingKey"}],"title":"DynamicDecodingContextCodingKey","role":"symbol","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"kind":"symbol","navigatorTitle":[{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"type":"topic","title":"DynamicDecodingDefaultValueWrapper","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that decodes dynamic value in a no throw approach based on","type":"text"},{"text":" ","type":"text"},{"text":"dynamic decoding context provided by ","type":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"kind":"article","type":"topic","title":"Using Default Value if Decoding Fails","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"},{"text":".","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper/init(wrappedValue:)":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper\/init(wrappedvalue:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper\/init(wrappedValue:)","title":"init(wrappedValue:)","abstract":[{"type":"text","text":"Creates new instance with an underlying dynamic wrapped value."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"type":"topic","title":"DynamicDecodingDefaultValueProvider","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","role":"symbol","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","type":"topic","title":"DynamicCodableKit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","role":"collection","url":"\/documentation\/dynamiccodablekit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode.","type":"text"}],"kind":"article","title":"Decoding with Type Identifiers","role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/typeidentifier","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"}}}