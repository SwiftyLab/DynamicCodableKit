{"abstract":[{"text":"Creates new instance with an underlying dynamic wrapped value.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper"]]},"sections":[],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper\/init(wrappedValue:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":2,"major":0},"metadata":{"modules":[{"name":"DynamicCodableKit"}],"symbolKind":"init","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(wrappedValue:)","externalID":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV07wrappedF0ACyxq_Gq__tcfc","roleHeading":"Initializer"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An initial value with wrapped dynamic value."}]}],"name":"wrappedValue"}],"kind":"parameters"}],"variants":[{"paths":["\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper\/init(wrappedvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"title":"DynamicDecodingDefaultValueWrapper","navigatorTitle":[{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that decodes dynamic value in a no throw approach based on"},{"type":"text","text":" "},{"type":"text","text":"dynamic decoding context provided by "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"kind":"article","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"navigatorTitle":[{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}],"title":"DynamicDecodingContextCodingKey","abstract":[{"text":"A coding key type that decides dynamic decoding context based on its associated ","type":"text"},{"code":"KeyedDecodingContainer","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"title":"DynamicDecodingDefaultValueProvider","navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper/init(wrappedValue:)":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper\/init(wrappedValue:)","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper\/init(wrappedvalue:)","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(wrappedValue:)","abstract":[{"type":"text","text":"Creates new instance with an underlying dynamic wrapped value."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","title":"DynamicCodableKit","url":"\/documentation\/dynamiccodablekit","role":"collection","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"kind":"article","title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic"}}}