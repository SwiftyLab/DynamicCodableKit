{"sections":[],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"DynamicDecodable","kind":"typeIdentifier","preciseIdentifier":"s:17DynamicCodableKit0A9DecodableP","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" & ","kind":"text"},{"text":"DynamicEncodable","kind":"typeIdentifier","preciseIdentifier":"s:17DynamicCodableKit0A9EncodableP","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable"},{"text":" & ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"code":"DynamicCodable","type":"codeVoice"},{"text":" is a type alias for the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","type":"reference"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" protocols.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit\/dynamiccodable"]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"role":"symbol","roleHeading":"Type Alias","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"title":"DynamicCodable","modules":[{"name":"DynamicCodableKit"}],"externalID":"s:17DynamicCodableKit0aB0a","symbolKind":"typealias"},"kind":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"type":"topic","title":"DynamicEncodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","kind":"symbol","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic encoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding and encoding"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"kind":"symbol","title":"DynamicCodable","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","role":"collection","kind":"symbol","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","role":"symbol","title":"DynamicDecodable","kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}]}}}