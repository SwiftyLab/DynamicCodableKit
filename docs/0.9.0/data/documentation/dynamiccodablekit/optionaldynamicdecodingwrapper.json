{"seeAlsoSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper"],"generated":true,"title":"Type Aliases"}],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"]]},"metadata":{"navigatorTitle":[{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"externalID":"s:17DynamicCodableKit08OptionalA15DecodingWrappera","modules":[{"name":"DynamicCodableKit"}],"symbolKind":"typealias","role":"symbol","roleHeading":"Type Alias","title":"OptionalDynamicDecodingWrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"genericParameter"},{"text":"> = ","kind":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","text":"DynamicDecodingDefaultValueWrapper","preciseIdentifier":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Identified","kind":"typeIdentifier"},{"text":">> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextCodingKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","text":"DynamicDecodingContextCodingKey","preciseIdentifier":"s:17DynamicCodableKit0A24DecodingContextCodingKeyP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"OptionalDynamicDecodingWrapper"},{"type":"text","text":" is a type alias for"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with wrapped value as optional dynamic value. If decoding fails,"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is used as underlying value instead of throwing error."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"abstract":[{"type":"text","text":"A property wrapper type that decodes optional dynamic value based on dynamic"},{"type":"text","text":" "},{"type":"text","text":"decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"type":"text","text":"."}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextProvider":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextProvider","kind":"identifier"}],"title":"DynamicDecodingContextProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextprovider","navigatorTitle":[{"text":"DynamicDecodingContextProvider","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type that decides dynamic decoding context based on provided "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingContextBasedWrapper":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingContextBasedWrapper","kind":"identifier"}],"title":"OptionalDynamicDecodingContextBasedWrapper","url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingcontextbasedwrapper","navigatorTitle":[{"text":"OptionalDynamicDecodingContextBasedWrapper","kind":"identifier"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that decodes optional dynamic value based on dynamic"},{"type":"text","text":" "},{"type":"text","text":"decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","isActive":true},{"type":"text","text":"."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"abstract":[{"type":"text","text":"A property wrapper type that decodes dynamic value in a no throw approach based on"},{"type":"text","text":" "},{"type":"text","text":"dynamic decoding context provided by "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"DynamicDecodingDefaultValueWrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"abstract":[{"type":"text","text":"A property wrapper type that exposes optional value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"from the path of coding keys taken to get to decoding this type."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper","title":"OptionalPathCodingKeyWrapper","navigatorTitle":[{"kind":"identifier","text":"OptionalPathCodingKeyWrapper"}],"role":"symbol","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","role":"collectionGroup","kind":"article","title":"Using Default Value if Decoding Fails"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"abstract":[{"type":"text","text":"A coding key type that decides dynamic decoding context based on its associated "},{"type":"codeVoice","code":"KeyedDecodingContainer"},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingContextCodingKey"}],"navigatorTitle":[{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"DynamicDecodingContextCodingKey"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingWrapper":{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper","url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper","navigatorTitle":[{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"type":"topic","title":"OptionalDynamicDecodingWrapper","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","isActive":true},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","role":"collection","kind":"symbol","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"DynamicDecodingDefaultValueProvider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier","role":"collectionGroup","kind":"article","title":"Decoding with Type Identifiers"}}}