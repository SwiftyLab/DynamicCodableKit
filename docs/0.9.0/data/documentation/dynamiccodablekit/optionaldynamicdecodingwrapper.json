{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ContextCodingKey"},{"kind":"text","text":"> = "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","preciseIdentifier":"s:17DynamicCodableKit0A27DecodingDefaultValueWrapperV","kind":"typeIdentifier","text":"DynamicDecodingDefaultValueWrapper"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ContextCodingKey"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Sq","kind":"typeIdentifier","text":"Optional"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ContextCodingKey"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Identified"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ContextCodingKey"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","kind":"typeIdentifier","text":"DynamicDecodingContextCodingKey","preciseIdentifier":"s:17DynamicCodableKit0A24DecodingContextCodingKeyP"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OptionalDynamicDecodingWrapper"},{"text":" is a type alias for","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"with wrapped value as optional dynamic value. If decoding fails,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is used as underlying value instead of throwing error.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper"},"metadata":{"role":"symbol","navigatorTitle":[{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"externalID":"s:17DynamicCodableKit08OptionalA15DecodingWrappera","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"modules":[{"name":"DynamicCodableKit"}],"roleHeading":"Type Alias","title":"OptionalDynamicDecodingWrapper"},"abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier"]]},"schemaVersion":{"minor":2,"major":0,"patch":0},"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper"],"title":"Type Aliases"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingContextBasedWrapper":{"kind":"symbol","navigatorTitle":[{"text":"OptionalDynamicDecodingContextBasedWrapper","kind":"identifier"}],"type":"topic","title":"OptionalDynamicDecodingContextBasedWrapper","abstract":[{"type":"text","text":"A property wrapper type that decodes optional dynamic value based on dynamic"},{"type":"text","text":" "},{"type":"text","text":"decoding context provided by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingContextBasedWrapper","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingContextBasedWrapper","url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingcontextbasedwrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextProvider":{"kind":"symbol","navigatorTitle":[{"text":"DynamicDecodingContextProvider","kind":"identifier"}],"type":"topic","title":"DynamicDecodingContextProvider","abstract":[{"type":"text","text":"A type that decides dynamic decoding context based on provided "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextProvider","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextprovider"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalDynamicDecodingWrapper":{"url":"\/documentation\/dynamiccodablekit\/optionaldynamicdecodingwrapper","title":"OptionalDynamicDecodingWrapper","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalDynamicDecodingWrapper","navigatorTitle":[{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that decodes optional dynamic value based on dynamic","type":"text"},{"text":" ","type":"text"},{"text":"decoding context provided by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalDynamicDecodingWrapper","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/OptionalPathCodingKeyWrapper":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"OptionalPathCodingKeyWrapper","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/OptionalPathCodingKeyWrapper","role":"symbol","title":"OptionalPathCodingKeyWrapper","abstract":[{"type":"text","text":"A property wrapper type that exposes optional value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"from the path of coding keys taken to get to decoding this type."}],"url":"\/documentation\/dynamiccodablekit\/optionalpathcodingkeywrapper"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueWrapper":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvaluewrapper","title":"DynamicDecodingDefaultValueWrapper","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueWrapper","navigatorTitle":[{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that decodes dynamic value in a no throw approach based on","type":"text"},{"text":" ","type":"text"},{"text":"dynamic decoding context provided by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingDefaultValueWrapper","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"kind":"symbol","url":"\/documentation\/dynamiccodablekit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system.","type":"text"}],"type":"topic","role":"collection","title":"DynamicCodableKit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContextCodingKey":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontextcodingkey","title":"DynamicDecodingContextCodingKey","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContextCodingKey","navigatorTitle":[{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A coding key type that decides dynamic decoding context based on its associated ","type":"text"},{"type":"codeVoice","code":"KeyedDecodingContainer"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContextCodingKey","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"title":"DynamicDecodingDefaultValueProvider","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","title":"Decoding with Type Identifiers","kind":"article","type":"topic","url":"\/documentation\/dynamiccodablekit\/typeidentifier"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}]}}}