{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper\/wrappedValue","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"The underlying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider"},{"type":"text","text":" "},{"type":"text","text":"that wraps coding key value referenced."}],"schemaVersion":{"patch":0,"major":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper"],["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper"]]},"variants":[{"paths":["\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"title":"wrappedValue","symbolKind":"property","modules":[{"name":"DynamicCodableKit"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"roleHeading":"Instance Property","role":"symbol","externalID":"s:17DynamicCodableKit32PathCodingKeyDefaultValueWrapperV07wrappedH0xvp"},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"url":"\/documentation\/dynamiccodablekit\/containercodingkey","role":"collectionGroup","title":"Decoding with Parent CodingKey","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","type":"topic","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","role":"collectionGroup","kind":"article","title":"Using Default Value if Decoding Fails"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper/wrappedValue":{"abstract":[{"type":"text","text":"The underlying "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"that wraps coding key value referenced."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper\/wrappedValue","kind":"symbol","title":"wrappedValue","role":"symbol","url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper\/wrappedvalue"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swiftâ€™s sound type system."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","url":"\/documentation\/dynamiccodablekit","role":"collection","kind":"symbol","title":"DynamicCodableKit"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/PathCodingKeyDefaultValueWrapper":{"role":"symbol","url":"\/documentation\/dynamiccodablekit\/pathcodingkeydefaultvaluewrapper","navigatorTitle":[{"text":"PathCodingKeyDefaultValueWrapper","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/PathCodingKeyDefaultValueWrapper","type":"topic","title":"PathCodingKeyDefaultValueWrapper","abstract":[{"type":"text","text":"A property wrapper type that exposes value of provided coding key type"},{"type":"text","text":" "},{"type":"text","text":"in a no throw approach from the path of coding keys taken to get to decoding this type."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathCodingKeyDefaultValueWrapper","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"navigatorTitle":[{"text":"DynamicDecodingDefaultValueProvider","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"DynamicDecodingDefaultValueProvider"}}}