{"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"metadata":{"roleHeading":"Framework","symbolKind":"module","modules":[{"name":"DynamicCodableKit"}],"role":"collection","title":"DynamicCodableKit","externalID":"DynamicCodableKit"},"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"},{"text":" that decodes a generic type, during initialization any concrete ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable"},{"text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"code":"DynamicCodableKit","type":"codeVoice"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Requirements","anchor":"Requirements"},{"rows":[[[{"inlineContent":[{"text":"Platform","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Minimum Swift Version","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Installation","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Status"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"CocoaPods, Carthage, Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Fully Tested","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Linux","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Windows"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Not Tested but Supported"}],"type":"paragraph"}]]],"type":"table","header":"row"},{"level":2,"type":"heading","text":"Installation","anchor":"Installation"},{"level":3,"type":"heading","text":"CocoaPods","anchor":"CocoaPods"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/cocoapods.org"},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":":"}]},{"code":["pod 'DynamicCodableKit'"],"syntax":"ruby","type":"codeListing"},{"level":3,"type":"heading","text":"Carthage","anchor":"Carthage"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage"},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"type":"codeVoice","code":"Cartfile"},{"type":"text","text":":"}]},{"code":["github \"SwiftyLab\/DynamicCodableKit\""],"syntax":"ogdl","type":"codeListing"},{"level":3,"type":"heading","text":"Swift Package Manager","anchor":"Swift-Package-Manager"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference","isActive":true},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}]},{"type":"paragraph","inlineContent":[{"text":"Once you have your Swift package set up, adding ","type":"text"},{"type":"codeVoice","code":"DynamicCodableKit"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"type":"codeVoice","code":"dependencies"},{"text":" value of your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":".","type":"text"}]},{"code":["dependencies: [","    .package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", .upToNextMajor(from: \"1.0.0\"))","]"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamiccodablekit"]}],"kind":"symbol","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}],"sections":[],"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[[]]},"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","type":"topic","role":"collectionGroup","kind":"article","title":"Using Default Value if Decoding Fails","abstract":[{"text":"Customize behavior if decoding fails by implementing ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"reference"},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"url":"\/documentation\/dynamiccodablekit\/containercodingkey","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","type":"topic","role":"collectionGroup","kind":"article","title":"Decoding with Parent CodingKey","abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"role":"symbol","kind":"symbol","title":"DynamicDecodingDefaultValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"role":"symbol","navigatorTitle":[{"text":"DynamicDecodable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","title":"DynamicDecodable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"title":"SequenceInitializable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"role":"symbol","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","title":"CollectionDecodeFailConfiguration","kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"url":"\/documentation\/dynamiccodablekit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","type":"topic","role":"collection","kind":"symbol","title":"DynamicCodableKit","abstract":[{"text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"role":"symbol","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","abstract":[{"type":"text","text":"Stores context for decoding a dynamic type or dynamic array."}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","title":"DynamicDecodingContext","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DynamicDecodingContext","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"title":"castAs(type:codingPath:)","kind":"symbol","defaultImplementations":4,"role":"symbol","required":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"topic","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodingKey","kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Cast self as generic  type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}]},"https://cocoapods.org":{"url":"https:\/\/cocoapods.org","title":"CocoaPods","titleInlineContent":[{"text":"CocoaPods","type":"text"}],"identifier":"https:\/\/cocoapods.org","type":"link"},"https://swift.org/package-manager/":{"url":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"identifier":"https:\/\/swift.org\/package-manager\/","type":"link"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","type":"topic","abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/dynamiccodablekit\/collectiondecoding","title":"Configure Collection Type Decoding","kind":"article"},"https://github.com/Carthage/Carthage":{"url":"https:\/\/github.com\/Carthage\/Carthage","title":"Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"link"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"title":"DynamicEncodable","abstract":[{"type":"text","text":"A type that can be dynamically converted to external representation,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic encoding."}],"url":"\/documentation\/dynamiccodablekit\/dynamicencodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicEncodable"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicEncodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"url":"\/documentation\/dynamiccodablekit\/typeidentifier","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","role":"collectionGroup","kind":"article","title":"Decoding with Type Identifiers","abstract":[{"type":"text","text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode."}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"url":"\/documentation\/dynamiccodablekit\/dynamiccodable","title":"DynamicCodable","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"role":"symbol","abstract":[{"text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding and encoding","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","kind":"symbol","type":"topic"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"url":"\/documentation\/dynamiccodablekit\/contextprovider","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","role":"collectionGroup","kind":"article","title":"Decoding with Provided Context","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}]}}}