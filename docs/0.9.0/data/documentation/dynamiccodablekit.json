{"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider"],"title":"Common Scenarios"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding"],"title":"Decoding Configurations"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable"],"title":"Protocols"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext"],"title":"Structures"},{"identifiers":["doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable"],"title":"Type Aliases"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit"},"sections":[],"variants":[{"paths":["\/documentation\/dynamiccodablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"DynamicCodableKit"}],"title":"DynamicCodableKit","role":"collection","externalID":"DynamicCodableKit"},"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" framework provides a base layer of functionality to allow dynamic JSON data decoding. It does so by providing a "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","type":"reference","isActive":true},{"type":"text","text":" that decodes a generic type, during initialization any concrete "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"reference","isActive":true},{"type":"text","text":" type can be provided to be decoded and then casted to the required generic type by using type’s implemented "},{"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The data types, protocols, and property wrappers defined by "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" can be used to provide dynamic decoding functionality to swift’s "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},{"anchor":"Requirements","type":"heading","level":2,"text":"Requirements"},{"type":"table","rows":[[[{"inlineContent":[{"text":"Platform","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Minimum Swift Version"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Installation"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Status"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"iOS 8.0+ \/ macOS 10.10+ \/ tvOS 9.0+ \/ watchOS 2.0+","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"CocoaPods, Carthage, Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Fully Tested"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Linux"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Fully Tested","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Windows","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"5.1","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Not Tested but Supported","type":"text"}],"type":"paragraph"}]]],"header":"row"},{"anchor":"Installation","type":"heading","level":2,"text":"Installation"},{"anchor":"CocoaPods","type":"heading","level":3,"text":"CocoaPods"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/cocoapods.org"},{"text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate ","type":"text"},{"code":"DynamicCodableKit","type":"codeVoice"},{"text":" into your Xcode project using CocoaPods, specify it in your ","type":"text"},{"code":"Podfile","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"ruby","type":"codeListing","code":["pod 'DynamicCodableKit'"]},{"anchor":"Carthage","type":"heading","level":3,"text":"Carthage"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Carthage\/Carthage"},{"type":"text","text":" is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" into your Xcode project using Carthage, specify it in your "},{"type":"codeVoice","code":"Cartfile"},{"type":"text","text":":"}]},{"syntax":"ogdl","type":"codeListing","code":["github \"SwiftyLab\/DynamicCodableKit\""]},{"anchor":"Swift-Package-Manager","type":"heading","level":3,"text":"Swift Package Manager"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/"},{"type":"text","text":" is a tool for automating the distribution of Swift code and is integrated into the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" compiler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"DynamicCodableKit"},{"type":"text","text":" as a dependency is as easy as adding it to the "},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" value of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/SwiftyLab\/DynamicCodableKit.git\", .upToNextMajor(from: \"1.0.0\"))","]"]}],"kind":"content"}],"references":{"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingDefaultValueProvider":{"kind":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","title":"DynamicDecodingDefaultValueProvider","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingdefaultvalueprovider","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}],"abstract":[{"type":"text","text":"A type that can be dynamically casted to multiple type,"},{"type":"text","text":" "},{"type":"text","text":"allowing dynamic decoding."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodingDefaultValueProvider"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContainerCodingKey":{"abstract":[{"text":"Decode dynamic JSON objects based on parent coding key that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContainerCodingKey","type":"topic","title":"Decoding with Parent CodingKey","url":"\/documentation\/dynamiccodablekit\/containercodingkey","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/ContextProvider":{"title":"Decoding with Provided Context","url":"\/documentation\/dynamiccodablekit\/contextprovider","kind":"article","role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/ContextProvider","type":"topic","abstract":[{"text":"Decode dynamic JSON objects based on previous responses or actions by providing decoding context to top level decoder, i.e. ","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicEncodable":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicEncodable","url":"\/documentation\/dynamiccodablekit\/dynamicencodable","type":"topic","title":"DynamicEncodable","abstract":[{"text":"A type that can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic encoding.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicEncodable","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicEncodable","kind":"identifier"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicCodable":{"title":"DynamicCodable","kind":"symbol","type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicCodable","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type that can be dynamically casted to multiple type and can be dynamically converted to external representation,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding and encoding","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamiccodable"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/TypeIdentifier":{"abstract":[{"text":"Decode dynamic JSON objects based on single or mutiple identifiers that indicates the actual type to decode.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/TypeIdentifier","type":"topic","title":"Decoding with Type Identifiers","url":"\/documentation\/dynamiccodablekit\/typeidentifier","kind":"article"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecodeFailConfiguration":{"navigatorTitle":[{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"abstract":[{"type":"text","text":"Available dynamic array decoding configuration."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDecodeFailConfiguration"}],"url":"\/documentation\/dynamiccodablekit\/collectiondecodefailconfiguration","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"topic","title":"CollectionDecodeFailConfiguration"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable":{"title":"DynamicDecodable","url":"\/documentation\/dynamiccodablekit\/dynamicdecodable","navigatorTitle":[{"kind":"identifier","text":"DynamicDecodable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable","type":"topic","abstract":[{"text":"A type that can be dynamically casted to multiple type,","type":"text"},{"text":" ","type":"text"},{"text":"allowing dynamic decoding.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicDecodable"}],"kind":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/SequenceInitializable":{"title":"SequenceInitializable","url":"\/documentation\/dynamiccodablekit\/sequenceinitializable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceInitializable"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SequenceInitializable"}],"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/SequenceInitializable","type":"topic","abstract":[{"text":"A type that can be initialized with a finite sequence of items.","type":"text"}]},"doc://DynamicCodableKit/documentation/DynamicCodableKit":{"role":"collection","abstract":[{"type":"text","text":"Access essential data types, property wrappers, and protocols to implement dynamic JSON decoding functionality working with Swift’s sound type system."}],"url":"\/documentation\/dynamiccodablekit","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit","title":"DynamicCodableKit","type":"topic","kind":"symbol"},"https://github.com/Carthage/Carthage":{"url":"https:\/\/github.com\/Carthage\/Carthage","titleInlineContent":[{"text":"Carthage","type":"text"}],"identifier":"https:\/\/github.com\/Carthage\/Carthage","type":"link","title":"Carthage"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/CollectionDecoding":{"abstract":[{"type":"text","text":"Customize collection decoding failure handling with "},{"isActive":true,"identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecodeFailConfiguration","type":"reference"},{"type":"text","text":" value."}],"kind":"article","role":"collectionGroup","url":"\/documentation\/dynamiccodablekit\/collectiondecoding","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/CollectionDecoding","type":"topic","title":"Configure Collection Type Decoding"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodable/castAs(type:codingPath:)-4hwd":{"defaultImplementations":4,"title":"castAs(type:codingPath:)","kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodable\/castAs(type:codingPath:)-4hwd","role":"symbol","abstract":[{"text":"Cast self as generic  type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"castAs","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"codingPath","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/dynamiccodablekit\/dynamicdecodable\/castas(type:codingpath:)-4hwd"},"https://cocoapods.org":{"titleInlineContent":[{"type":"text","text":"CocoaPods"}],"url":"https:\/\/cocoapods.org","identifier":"https:\/\/cocoapods.org","title":"CocoaPods","type":"link"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/DynamicDecodingContext":{"title":"DynamicDecodingContext","kind":"symbol","navigatorTitle":[{"text":"DynamicDecodingContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingContext","url":"\/documentation\/dynamiccodablekit\/dynamicdecodingcontext","abstract":[{"text":"Stores context for decoding a dynamic type or dynamic array.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicDecodingContext","kind":"identifier"}],"role":"symbol"},"doc://DynamicCodableKit/documentation/DynamicCodableKit/NoThrowDecoding":{"kind":"article","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/NoThrowDecoding","title":"Using Default Value if Decoding Fails","url":"\/documentation\/dynamiccodablekit\/nothrowdecoding","abstract":[{"type":"text","text":"Customize behavior if decoding fails by implementing "},{"type":"reference","identifier":"doc:\/\/DynamicCodableKit\/documentation\/DynamicCodableKit\/DynamicDecodingDefaultValueProvider","isActive":true},{"type":"text","text":"."}],"role":"collectionGroup","type":"topic"},"https://swift.org/package-manager/":{"titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"url":"https:\/\/swift.org\/package-manager\/","identifier":"https:\/\/swift.org\/package-manager\/","title":"Swift Package Manager","type":"link"}}}