#if !canImport(ObjectiveC)
import XCTest

extension DynamicDecodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodableTests = [
        ("testArrayCastingToBoxTypeArray", testArrayCastingToBoxTypeArray),
        ("testArrayCastingToExistentialArray", testArrayCastingToExistentialArray),
        ("testCastingToBoxType", testCastingToBoxType),
        ("testCastingToExistential", testCastingToExistential),
        ("testDefaultCollectionCastingForSingleValue", testDefaultCollectionCastingForSingleValue),
        ("testDefaultCollectionCastingForSingleValueFailure", testDefaultCollectionCastingForSingleValueFailure),
        ("testDefaultCollectionDownCasting", testDefaultCollectionDownCasting),
        ("testDefaultCollectionDownCastingFailure", testDefaultCollectionDownCastingFailure),
        ("testDefaultDownCasting", testDefaultDownCasting),
        ("testDefaultDownCastingFailure", testDefaultDownCastingFailure),
        ("testDefaultOptionalDownCasting", testDefaultOptionalDownCasting),
        ("testDefaultOptionalDownCastingFailure", testDefaultOptionalDownCastingFailure),
        ("testOptionalCastingToBoxType", testOptionalCastingToBoxType),
        ("testOptionalCastingToExistential", testOptionalCastingToExistential),
        ("testSetCastingToBoxTypeSet", testSetCastingToBoxTypeSet),
    ]
}

extension DynamicDecodingCollectionContextBasedWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingCollectionContextBasedWrapperTests = [
        ("testDecoding", testDecoding),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithLossyConfig", testInvalidDataDecodingWithLossyConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
    ]
}

extension DynamicDecodingCollectionDictionaryWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingCollectionDictionaryWrapperTests = [
        ("testDecoding", testDecoding),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithLossyConfig", testInvalidDataDecodingWithLossyConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
    ]
}

extension DynamicDecodingCollectionWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingCollectionWrapperTests = [
        ("testDecoding", testDecoding),
        ("testDecodingWithSet", testDecodingWithSet),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithDefaultConfigWithSet", testInvalidDataDecodingWithDefaultConfigWithSet),
        ("testInvalidDataDecodingWithLossyConfig", testInvalidDataDecodingWithLossyConfig),
        ("testInvalidDataDecodingWithLossyConfigWithSet", testInvalidDataDecodingWithLossyConfigWithSet),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
        ("testInvalidDataDecodingWithThrowConfigWithSet", testInvalidDataDecodingWithThrowConfigWithSet),
    ]
}

extension DynamicDecodingContextBasedWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingContextBasedWrapperTests = [
        ("testDecoding", testDecoding),
        ("testIdentifierKeyContextDecoding", testIdentifierKeyContextDecoding),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
        ("testOptionalDecoding", testOptionalDecoding),
    ]
}

extension DynamicDecodingContextTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingContextTests = [
        ("testFallbackArrayDecoding", testFallbackArrayDecoding),
        ("testFallbackDecodingWithFallbackSucess", testFallbackDecodingWithFallbackSucess),
        ("testFallbackDecodingWithPrimarySucess", testFallbackDecodingWithPrimarySucess),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithLossyConfig", testInvalidDataDecodingWithLossyConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
    ]
}

extension DynamicDecodingDictionaryWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingDictionaryWrapperTests = [
        ("testDecoding", testDecoding),
        ("testInvalidDataDecodingWithLossyConfig", testInvalidDataDecodingWithLossyConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
    ]
}

extension DynamicDecodingWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DynamicDecodingWrapperTests = [
        ("testDecoding", testDecoding),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
        ("testOptionalDecoding", testOptionalDecoding),
    ]
}

extension PathCodingKeyWrapperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathCodingKeyWrapperTests = [
        ("testDecoding", testDecoding),
        ("testInvalidDataDecodingWithDefaultConfig", testInvalidDataDecodingWithDefaultConfig),
        ("testInvalidDataDecodingWithThrowConfig", testInvalidDataDecodingWithThrowConfig),
        ("testOptionalDecoding", testOptionalDecoding),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DynamicDecodableTests.__allTests__DynamicDecodableTests),
        testCase(DynamicDecodingCollectionContextBasedWrapperTests.__allTests__DynamicDecodingCollectionContextBasedWrapperTests),
        testCase(DynamicDecodingCollectionDictionaryWrapperTests.__allTests__DynamicDecodingCollectionDictionaryWrapperTests),
        testCase(DynamicDecodingCollectionWrapperTests.__allTests__DynamicDecodingCollectionWrapperTests),
        testCase(DynamicDecodingContextBasedWrapperTests.__allTests__DynamicDecodingContextBasedWrapperTests),
        testCase(DynamicDecodingContextTests.__allTests__DynamicDecodingContextTests),
        testCase(DynamicDecodingDictionaryWrapperTests.__allTests__DynamicDecodingDictionaryWrapperTests),
        testCase(DynamicDecodingWrapperTests.__allTests__DynamicDecodingWrapperTests),
        testCase(PathCodingKeyWrapperTests.__allTests__PathCodingKeyWrapperTests),
    ]
}
#endif
