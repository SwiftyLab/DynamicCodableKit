name: CI/CD

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
  workflow_dispatch:
    inputs:
      release:
        description: Create release
        required: false
        type: boolean

concurrency:
  group: ci/cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    if: github.event_name != 'workflow_dispatch'
    uses: ./.github/workflows/codeql-analysis.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  swift-package-test:
    name: Run Swift Package Tests on ${{ matrix.os }} with swift version ${{ matrix.swift }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift: ['5.3', '5.6']
        exclude:
          - os: macos-latest
            swift: '5.3'
        # TODO: Enable windows when `swift-actions/setup-swift`
        # supports windows
        # os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup repository
      uses: ./.github/actions/setup
      with:
        swift: ${{ matrix.swift }}

    - name: Run tests
      run: npm run test

    - name: Swift Coverage Report
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: maxep/spm-lcov-action@0.3.1
      with:
        file-format: lcov
        output-file: ./coverage.lcov

    - name: Codecov upload
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  # cocoapods-test:
  #   name: Run CocoaPods Tests
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3

  #   - name: Setup repository
  #     uses: ./.github/actions/setup
  #     with:
  #       cocoapods: 'true'

  #   - name: Run tests
  #     run: npm run pod-lint

  # ci:
  #   name: Check if release needed
  #   if: github.event_name == 'push'
  #   needs: [analyze, swift-package-test, cocoapods-test]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   outputs:
  #     release: ${{ steps.check_version_bump.outputs.release_type != '' }}

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3

  #   - name: Setup repository
  #     uses: ./.github/actions/setup

  #   - name: Check version bump
  #     id: check_version_bump
  #     uses: mathieudutour/github-tag-action@v6.0
  #     with:
  #       github_token: ${{ github.token }}
  #       default_bump: false
  #       dry_run: true

  #   - name: Build package documentation
  #     if:  steps.check_version_bump.outputs.release_type == ''
  #     run: |
  #       npm run build
  #       npm run serve-doc

  #   - name: Update GitHub Pages
  #     if:  steps.check_version_bump.outputs.release_type == ''
  #     uses: JamesIves/github-pages-deploy-action@v4.3.3
  #     with:
  #         branch: gh-pages
  #         folder: .docc-build
  #         target-folder: docs
  #         commit-message: 'chore(GitHub Pages): update site for commit ${{ github.sha }}'

  #   - name: Update GitHub Pages for version
  #     if:  steps.check_version_bump.outputs.release_type == ''
  #     uses: JamesIves/github-pages-deploy-action@v4.3.3
  #     with:
  #         branch: gh-pages
  #         folder: .docc-build
  #         target-folder: docs/${{ steps.check_version_bump.outputs.previous_version }}
  #         commit-message: 'chore(GitHub Pages): update versioned site for commit ${{ github.sha }}'

  # cd:
  #   name: Build and Publish
  #   if: (github.event_name == 'push' && needs.ci.outputs.release == 'true') || (github.event_name == 'workflow_dispatch' && github.event.inputs.release == 'true')
  #   needs: [ci, analyze, swift-package-test, cocoapods-test]
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3

    # - name: Setup repository
    #   uses: ./.github/actions/setup
    #   with:
    #     cocoapods: 'true'
    #     xcode: '13.2.0'

    # - name: Conventional Changelog Action
    #   id: conventional_changelog
    #   uses: TriPSs/conventional-changelog-action@v3
    #   with:
    #     github-token: ${{ github.token }}
    #     git-message: 'chore(CHANGELOG): update for {version}'
    #     git-user-name: ${{ github.actor }}
    #     git-user-email: soumya.mahunt@gmail.com
    #     skip-version-file: true
    #     release-count: 0
    #     config-file-path: '.github/config/config.js'
    #     pre-commit: '.github/config/pre_commit_hook.js'

    # - name: Create XCFramework
    #   uses: unsignedapps/swift-create-xcframework@v2

    # - name: Build package products and documentation
    #   if: steps.conventional_changelog.outputs.skipped == 'false'
    #   run: |
    #     npm run build
    #     npm run serve-doc
    #     npm run archive -- $VERSION
    #     npm run build-doc -- $VERSION
    #   env:
    #     VERSION: ${{ steps.conventional_changelog.outputs.version }}

    # - name: Release GitHub Pages
    #   if: steps.conventional_changelog.outputs.skipped == 'false'
    #   uses: JamesIves/github-pages-deploy-action@v4.3.3
    #   with:
    #       branch: gh-pages
    #       folder: .docc-build
    #       target-folder: docs
    #       commit-message: 'chore(GitHub Pages): release site for tag ${{ steps.conventional_changelog.outputs.tag }}'

    # - name: Release GitHub Pages for version
    #   if: steps.conventional_changelog.outputs.skipped == 'false'
    #   uses: JamesIves/github-pages-deploy-action@v4.3.3
    #   with:
    #       branch: gh-pages
    #       folder: .docc-build
    #       target-folder: docs/${{ steps.conventional_changelog.outputs.version }}
    #       commit-message: 'chore(GitHub Pages): release versioned site for tag ${{ steps.conventional_changelog.outputs.tag }}'

    # - name: Create GitHub Release
    #   if: steps.conventional_changelog.outputs.skipped == 'false'
    #   uses: ncipollo/release-action@v1
    #   with:
    #     token: ${{ github.token }}
    #     tag: ${{ steps.conventional_changelog.outputs.tag }}
    #     body: ${{ steps.conventional_changelog.outputs.changelog }}
    #     artifacts: '*.zip'

    # - name: Swift Package Registry
    #   if: steps.conventional_changelog.outputs.skipped == 'false'
    #   uses: twodayslate/swift-package-registry@v0.0.2
